var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.015,1,0.702]],["body/components/AppComponent.html",[0,0.024,1,1.18,2,1.242,3,0.223,4,0.223,5,0.986,6,0.986,7,0.986,8,0.185,9,2.619,10,0.986,11,1.971,12,1.67,13,2.768,14,1.349,15,4.294,16,0.767,17,1.142,18,5.264,19,1.142,20,3.138,21,4.752,22,4.231,23,4.231,24,1.142,25,3.138,26,0.986,27,0.032,28,1.197,29,0.835,30,0.986,31,3.138,32,0.835,33,0.907,34,0.374,35,0.185,36,0.704,37,2.489,38,2.278,39,2.619,40,2.278,41,2.619,42,0.223,43,0.223,44,2.838,45,3.138,46,3.138,47,3.138,48,3.138,49,0.389,50,1.349,51,1.349,52,0.986,53,1.653,54,0.986,55,0.986,56,0.704,57,0.835,58,1.349,59,0.704,60,0.986,61,0.704,62,0.986,63,0.704,64,0.986,65,0.704,66,0.963,67,0.644,68,0.986,69,0.704,70,0.986,71,0.704,72,0.986,73,0.704,74,0.986,75,0.704,76,0.986,77,0.644,78,0.907,79,0.986,80,0.986,81,0.015,82,0.021,83,0.015]],["title/modules/AppModule.html",[84,0.434,85,2.017]],["body/modules/AppModule.html",[1,1.386,3,0.219,4,0.219,8,0.182,12,0.821,22,3.081,23,3.081,27,0.033,34,0.451,35,0.182,36,0.692,37,3.03,38,2.239,39,2.575,40,2.239,41,2.575,42,0.219,43,0.219,49,0.382,81,0.015,82,0.021,83,0.015,84,0.428,85,3.866,86,0.821,87,0.969,88,1.798,89,1.798,90,1.572,91,0.969,92,2.575,93,2.575,94,2.575,95,2.575,96,3.283,97,1.572,98,1.143,99,0.969,100,3.085,101,1.448,102,1.448,103,4.245,104,2.575,105,2.239,106,4.245,107,0.821,108,1.243,109,4.245,110,1.863,111,3.081,112,1.052,113,3.085,114,3.085,115,3.085,116,4.245,117,2.239,118,2.575,119,3.543,120,3.085,121,2.575,122,3.085,123,3.085,124,3.085,125,2.575,126,4.245,127,2.575,128,4.245,129,2.575,130,4.245,131,3.085,132,3.085,133,2.239,134,3.081,135,2.239,136,2.575,137,2.239,138,3.085,139,3.085,140,3.085,141,3.085,142,3.085]],["title/modules/AppRoutingModule.html",[84,0.434,96,1.814]],["body/modules/AppRoutingModule.html",[3,0.29,4,0.29,8,0.241,27,0.033,34,0.363,35,0.241,42,0.29,43,0.29,57,1.089,78,1.183,81,0.02,82,0.025,83,0.02,86,1.089,91,1.285,96,2.962,101,1.396,102,1.743,107,1.089,143,4.092,144,4.092,145,5.11,146,2.242,147,2.445,148,1.183,149,2.225,150,4.871,151,4.092,152,3.709,153,4.092,154,3.416,155,3.416,156,3.416,157,4.092,158,2.638,159,4.092,160,4.092,161,4.092]],["title/injectables/AuthService.html",[162,1.5,163,1.261]],["body/injectables/AuthService.html",[3,0.143,4,0.143,8,0.119,13,1.303,16,0.494,17,0.829,19,0.829,21,4.244,24,1.489,26,1.195,27,0.033,28,0.93,29,1.012,30,1.195,32,1.433,33,0.585,34,0.39,35,0.119,36,0.453,37,1.172,42,0.143,43,0.143,44,3.335,81,0.019,82,0.015,83,0.01,107,0.538,121,1.688,129,1.688,133,1.468,134,3.103,135,1.468,136,1.688,148,1.47,149,0.749,152,2.761,162,1.494,163,1.256,164,1.303,165,1.688,166,1.155,167,4.244,168,3.484,169,4.275,170,4.275,171,4.275,172,4.275,173,4.275,174,3.117,175,4.275,176,3.541,177,3.804,178,2.022,179,4.275,180,1.669,181,1.458,182,4.244,183,3.804,184,5.084,185,4.244,186,3.117,187,3.117,188,2.022,189,2.022,190,2.022,191,2.022,192,2.022,193,2.602,194,3.117,195,3.175,196,2.022,197,2.602,198,2.022,199,2.022,200,2.022,201,2.022,202,2.761,203,1.823,204,2.022,205,1.063,206,1.172,207,1.688,208,1.688,209,1.063,210,1.688,211,1.468,212,2.602,213,2.022,214,1.172,215,2.022,216,2.022,217,2.022,218,2.17,219,1.688,220,2.022,221,2.022,222,2.022,223,2.022,224,2.022,225,2.022,226,3.461,227,2.022,228,2.022,229,3.175,230,3.117,231,2.602,232,3.117,233,2.022,234,1.807,235,2.022,236,2.022,237,2.022,238,2.602,239,2.022,240,2.022,241,2.022,242,2.022,243,2.022,244,2.022,245,2.022,246,2.022,247,2.022,248,1.063,249,2.022,250,2.022,251,2.022,252,2.022,253,2.022,254,2.022,255,2.022,256,2.022,257,2.022,258,2.009,259,1.468,260,2.022,261,2.022,262,2.022,263,2.022,264,2.022,265,2.022,266,2.022,267,2.022,268,2.022,269,2.022,270,2.022,271,2.022,272,2.022,273,2.022,274,2.022,275,1.303,276,2.022,277,2.022]],["title/injectables/DbService.html",[162,1.5,181,1.067]],["body/injectables/DbService.html",[3,0.163,4,0.163,8,0.136,13,1.481,16,0.562,17,0.914,19,0.611,24,1.3,26,1.534,27,0.033,28,1.194,29,1.094,30,1.669,32,1.364,34,0.324,35,0.136,42,0.163,43,0.163,81,0.011,82,0.017,83,0.011,127,1.918,148,1.189,149,2.069,162,1.646,164,1.481,181,1.171,193,2.867,202,4.19,205,1.208,208,3.433,209,1.208,211,1.668,218,2.2,219,3.81,234,3.512,248,2.399,258,1.481,278,1.918,279,5.772,280,2.867,281,3.434,282,3.434,283,2.297,284,4.564,285,2.297,286,3.434,287,3.434,288,4.885,289,2.297,290,4.113,291,3.434,292,3.434,293,3.434,294,1.668,295,3.434,296,3.434,297,3.434,298,4.564,299,4.564,300,3.434,301,3.434,302,4.564,303,3.434,304,3.434,305,3.434,306,2.867,307,2.144,308,3.434,309,3.434,310,2.297,311,5.313,312,3.434,313,3.434,314,2.694,315,2.297,316,3.434,317,4.564,318,2.297,319,3.434,320,3.434,321,3.434,322,3.434,323,4.113,324,3.434,325,3.434,326,3.434,327,3.434,328,1.668,329,4.885,330,3.434,331,2.297,332,2.297,333,2.297,334,2.297,335,2.297,336,2.297,337,2.297,338,2.297,339,2.297,340,2.297,341,2.297,342,2.297,343,2.297,344,2.297,345,2.297,346,3.434,347,2.297,348,2.297,349,2.297,350,2.297]],["title/components/LobbyFormComponent.html",[0,0.015,56,0.702]],["body/components/LobbyFormComponent.html",[0,0.017,1,0.396,2,0.811,3,0.125,4,0.125,5,0.555,6,0.555,7,0.555,8,0.104,10,0.555,11,1.774,12,1.503,14,0.881,16,0.432,17,0.746,19,0.746,24,1.484,26,1.095,27,0.033,28,1.059,29,1.227,30,1.095,32,1.152,33,1.008,34,0.356,35,0.104,36,0.396,42,0.125,43,0.125,44,2.302,49,0.219,50,0.881,51,0.881,52,0.555,53,1.247,54,0.555,55,0.555,56,0.89,57,1.437,58,0.881,59,0.396,60,0.555,61,0.396,62,0.555,63,0.396,64,0.555,65,0.396,66,0.89,67,0.362,68,0.555,69,0.396,70,0.555,71,0.396,72,0.555,73,0.396,74,0.555,75,0.396,76,0.555,77,0.362,78,0.511,79,0.555,80,0.555,81,0.014,82,0.014,83,0.009,107,0.47,112,0.602,148,1.45,163,1.6,166,1.039,168,2.672,176,2.531,180,1.231,181,1.354,182,4.417,203,1.671,206,1.024,209,0.928,214,1.024,218,1.13,226,2.021,234,2.021,248,1.833,307,0.775,314,1.833,351,0.602,352,4.716,353,3.642,354,1.282,355,1.039,356,1.292,357,2.035,358,0.956,359,2.911,360,2.341,361,3.487,362,3.487,363,3.487,364,1.857,365,2.792,366,2.277,367,2.804,368,3.315,369,3.971,370,1.471,371,2.804,372,2.341,373,3.487,374,1.282,375,2.531,376,2.087,377,2.911,378,3.315,379,2.792,380,1.766,381,2.804,382,1.766,383,2.341,384,1.766,385,1.766,386,1.766,387,2.804,388,1.766,389,1.474,390,2.341,391,2.341,392,2.804,393,2.804,394,1.766,395,1.766,396,2.911,397,1.766,398,1.766,399,1.766,400,1.474,401,1.766,402,1.474,403,0.928,404,0.928,405,1.474,406,2.341,407,1.282,408,1.766,409,3.487,410,3.487,411,1.766,412,1.766,413,1.474,414,1.138,415,1.474,416,1.282,417,1.474,418,3.971,419,2.804,420,1.766,421,3.487,422,1.766,423,1.766,424,1.474,425,1.766,426,3.615,427,1.474,428,1.474,429,1.766,430,1.766,431,1.766,432,1.766,433,1.766,434,1.766,435,1.474,436,1.766,437,1.766,438,2.804,439,1.766,440,1.766,441,1.766,442,1.474,443,1.474,444,1.474,445,1.474,446,1.766,447,1.766,448,1.766,449,1.766,450,1.766,451,1.766,452,1.766,453,2.341,454,1.766,455,1.766,456,3.315,457,2.804,458,2.035,459,2.341]],["title/components/LobbyPage.html",[0,0.015,59,0.702]],["body/components/LobbyPage.html",[0,0.022,1,0.572,2,1.072,3,0.181,4,0.181,5,0.801,6,0.801,7,0.801,8,0.15,10,0.801,11,1.908,12,1.617,14,1.165,16,0.623,17,0.987,19,0.987,24,1.416,26,1.507,27,0.032,28,1.301,29,1.163,30,1.507,32,1.277,33,1.388,34,0.341,35,0.15,42,0.181,43,0.181,44,2.149,49,0.316,50,1.165,51,1.165,52,0.801,53,1.507,54,0.801,55,0.801,56,0.572,57,1.461,58,1.165,59,1.076,60,0.801,61,0.572,62,0.801,63,0.572,64,0.801,65,0.572,66,1.076,67,0.523,68,0.801,69,0.572,70,0.801,71,0.572,72,0.801,73,0.572,74,0.801,75,0.572,76,0.801,77,0.523,78,0.737,79,0.801,80,0.801,81,0.013,82,0.018,83,0.013,107,0.678,148,0.737,158,2.39,166,1.374,180,1.918,181,1.637,218,1.027,280,3.095,307,1.627,314,2.297,351,0.869,355,1.374,356,1.619,358,1.265,364,1.761,366,1.34,370,1.778,375,3.701,376,2.68,389,2.128,403,1.34,407,1.85,460,2.128,461,4.37,462,3.708,463,3.708,464,4.006,465,3.708,466,2.128,467,4.006,468,2.549,469,3.095,470,3.708,471,2.549,472,3.708,473,2.549,474,2.549,475,2.549,476,3.708,477,2.549,478,2.549,479,2.549,480,2.549,481,2.549,482,2.549,483,2.128,484,2.549,485,3.708,486,2.549,487,2.549,488,2.549,489,2.549,490,2.549,491,3.095,492,3.708,493,3.708,494,3.708]],["title/modules/LobbyPageModule.html",[84,0.434,495,2.017]],["body/modules/LobbyPageModule.html",[0,0.019,3,0.268,4,0.268,8,0.223,27,0.033,34,0.433,35,0.223,36,0.847,42,0.268,43,0.268,49,0.468,59,1.368,67,1.231,81,0.019,82,0.024,83,0.019,84,0.523,86,1.005,87,1.186,88,1.989,89,1.399,90,1.399,91,1.186,97,1.799,98,1.399,99,1.186,101,1.288,102,1.656,107,1.005,108,1.956,110,2.131,112,1.288,146,1.657,147,2.355,148,1.092,149,1.399,307,1.657,495,3.985,496,3.152,497,3.152,498,3.776,499,2.131,500,1.521,501,3.776,502,3.776,503,2.434,504,3.152,505,2.434]],["title/components/LoginPage.html",[0,0.015,61,0.702]],["body/components/LoginPage.html",[0,0.024,1,0.717,2,1.258,3,0.227,4,0.227,5,1.005,6,1.005,7,1.005,8,0.189,10,1.005,11,1.977,12,1.675,14,1.367,16,0.782,17,1.158,19,0.851,24,1.316,26,1.005,27,0.032,28,1.209,29,1.158,30,1.005,32,0.851,33,0.925,34,0.309,35,0.189,42,0.227,43,0.227,49,0.396,50,1.367,51,1.367,52,1.005,53,1.667,54,1.005,55,1.005,56,0.717,57,0.851,58,1.367,59,0.717,60,1.005,61,1.19,62,1.005,63,0.717,64,1.005,65,0.717,66,0.976,67,0.657,68,1.005,69,0.717,70,1.005,71,0.717,72,1.005,73,0.717,74,1.005,75,0.717,76,1.005,77,0.657,78,0.925,79,1.005,80,1.005,81,0.016,82,0.021,83,0.016,152,3.159,163,2.236,166,1.612,203,2.544,238,3.633,351,1.091,355,1.612,356,1.832,358,1.484,364,1.753,370,1.966,404,1.682,506,2.671,507,4.945,508,4.352,509,2.062,510,3.2,511,3.2,512,3.2,513,2.671,514,5.307,515,4.352]],["title/modules/LoginPageModule.html",[84,0.434,516,2.017]],["body/modules/LoginPageModule.html",[0,0.019,3,0.279,4,0.279,8,0.232,27,0.033,34,0.43,35,0.232,36,0.881,42,0.279,43,0.279,49,0.487,61,1.381,81,0.019,82,0.025,83,0.019,84,0.544,86,1.045,87,1.234,88,2.026,89,1.455,90,1.455,91,1.234,97,1.845,98,1.455,99,1.234,101,1.34,102,1.698,107,1.045,108,2.006,110,2.185,112,1.34,146,1.724,147,2.399,148,1.136,149,1.455,499,2.185,500,1.582,505,2.532,516,3.907,517,3.279,518,3.279,519,3.928,520,3.928]],["title/components/QuestionComponent.html",[0,0.015,63,0.702]],["body/components/QuestionComponent.html",[0,0.025,1,0.754,2,1.301,3,0.239,4,0.239,5,1.056,6,1.056,7,1.056,8,0.198,10,1.056,11,1.99,12,1.686,14,1.413,16,0.822,17,1.197,19,1.349,24,1.349,27,0.032,28,1.1,32,0.894,33,0.972,34,0.239,35,0.198,42,0.239,43,0.239,49,0.416,50,1.413,51,1.413,52,1.056,53,1.701,54,1.056,55,1.056,56,0.754,57,0.894,58,1.413,59,0.754,60,1.056,61,0.754,62,1.056,63,1.214,64,1.056,65,0.754,66,1.369,67,0.69,68,1.056,69,0.754,70,1.056,71,0.754,72,1.056,73,0.754,74,1.056,75,0.754,76,1.056,77,0.69,78,0.972,79,1.056,80,1.056,81,0.017,82,0.022,83,0.017,351,1.146,355,1.667,356,1.878,358,1.534,370,2.006,521,2.805,522,5.071,523,4.498,524,3.755,525,4.498,526,3.361,527,3.755,528,4.498]],["title/components/QuestionFormComponent.html",[0,0.015,65,0.702]],["body/components/QuestionFormComponent.html",[0,0.017,1,0.378,2,0.781,3,0.12,4,0.12,5,0.529,6,0.529,7,0.529,8,0.099,10,0.529,11,1.755,12,1.487,14,0.848,16,1.034,17,0.719,19,0.719,24,1.467,26,1.214,27,0.033,28,1.104,29,1.388,30,1.214,32,1.262,33,1.118,34,0.32,35,0.099,36,0.606,42,0.12,43,0.12,44,2.618,49,0.209,50,0.848,51,0.848,52,0.529,53,1.214,54,0.529,55,0.529,56,0.378,57,0.448,58,0.848,59,0.378,60,0.529,61,0.378,62,0.529,63,0.378,64,0.529,65,0.867,66,1.347,67,0.346,68,0.529,69,0.378,70,0.529,71,0.378,72,0.529,73,0.378,74,0.529,75,0.378,76,0.529,77,0.346,78,0.487,79,0.529,80,0.529,81,0.008,82,0.013,83,0.008,99,0.529,112,0.575,148,1.306,163,1.557,166,1.001,168,2.948,176,1.96,180,1.185,181,1.318,197,1.407,203,1.62,207,1.407,218,0.679,226,1.959,231,2.254,234,1.959,248,1.42,258,1.086,259,1.223,294,1.96,306,1.407,307,0.739,314,2.493,351,0.575,354,1.223,355,1.001,356,1.252,357,1.96,358,0.921,359,2.821,360,2.254,364,1.819,365,2.727,368,3.227,370,1.432,372,2.254,374,1.223,377,2.821,378,3.227,379,2.727,390,1.407,391,1.407,396,2.821,400,1.407,402,1.407,403,0.886,404,0.886,405,1.407,406,2.254,424,2.254,426,3.227,427,2.254,428,1.407,435,1.407,442,1.407,443,1.407,444,1.407,445,1.407,453,2.254,456,3.227,459,2.254,529,4.665,530,3.602,531,3.38,532,4.231,533,2.701,534,3.866,535,3.866,536,2.701,537,2.701,538,3.38,539,4.231,540,1.685,541,2.701,542,3.227,543,1.685,544,2.701,545,1.685,546,1.685,547,1.685,548,2.701,549,1.685,550,2.701,551,2.701,552,1.96,553,1.685,554,1.685,555,1.685,556,1.685,557,1.685,558,1.685,559,2.701,560,4.516,561,2.821,562,3.38,563,1.685,564,1.685,565,1.685,566,1.685,567,1.685,568,1.685,569,1.685,570,1.685,571,1.086,572,2.701,573,1.685,574,1.685,575,1.685,576,1.685,577,1.685,578,1.086,579,1.685,580,1.685,581,1.685,582,1.685,583,1.685,584,1.685,585,1.685,586,1.685,587,1.685,588,1.685,589,1.685,590,1.685,591,1.685,592,1.685,593,1.685,594,1.685,595,1.685,596,1.685,597,1.685,598,1.685,599,1.685,600,1.685,601,1.685,602,3.866,603,2.254]],["title/components/QuestionItemComponent.html",[0,0.015,67,0.642]],["body/components/QuestionItemComponent.html",[0,0.024,1,0.702,2,1.24,3,0.222,4,0.222,5,0.983,6,0.983,7,0.983,8,0.185,10,0.983,11,1.971,12,1.669,14,1.347,16,0.765,17,1.141,19,1.301,24,1.399,27,0.032,28,1.048,29,1.141,32,0.833,33,0.905,34,0.222,35,0.185,42,0.222,43,0.222,49,0.388,50,1.347,51,1.347,52,0.983,53,1.652,54,0.983,55,0.983,56,0.702,57,0.833,58,1.347,59,0.702,60,0.983,61,0.702,62,0.983,63,0.702,64,0.983,65,0.702,66,1.389,67,1.079,68,0.983,69,0.702,70,0.983,71,0.702,72,0.983,73,0.702,74,0.983,75,0.702,76,0.983,77,0.643,78,0.905,79,0.983,80,0.983,81,0.015,82,0.021,83,0.015,314,2.254,351,1.068,355,1.589,356,1.812,358,1.462,370,1.949,383,4.082,458,3.113,483,3.579,503,3.551,524,3.579,527,4.082,604,4.599,605,2.614,606,4.89,607,4.288,608,4.288,609,3.131,610,3.131]],["title/components/QuizPage.html",[0,0.015,69,0.702]],["body/components/QuizPage.html",[0,0.024,1,0.708,2,1.247,3,0.224,4,0.224,5,0.992,6,0.992,7,0.992,8,0.186,10,0.992,11,1.973,12,1.672,14,1.355,16,0.772,17,1.148,19,0.84,24,1.307,26,0.992,27,0.032,28,1.201,29,1.148,30,0.992,32,0.84,33,0.913,34,0.349,35,0.186,42,0.224,43,0.224,49,0.391,50,1.355,51,1.355,52,0.992,53,1.658,54,0.992,55,0.992,56,0.708,57,0.84,58,1.355,59,0.708,60,0.992,61,0.708,62,0.992,63,0.708,64,0.992,65,0.708,66,0.967,67,0.648,68,0.992,69,1.184,70,0.992,71,0.708,72,0.992,73,0.708,74,0.992,75,0.708,76,0.992,77,0.648,78,0.913,79,0.992,80,0.992,81,0.016,82,0.021,83,0.016,107,0.84,158,3.402,166,1.598,328,2.293,351,1.077,355,1.598,356,1.82,358,1.471,364,1.979,370,1.956,375,4.011,376,2.904,407,2.293,466,2.636,467,4.406,469,3.6,611,2.636,612,4.912,613,4.313,614,3.158,615,3.158,616,3.158]],["title/modules/QuizPageModule.html",[84,0.434,617,2.017]],["body/modules/QuizPageModule.html",[0,0.023,3,0.259,4,0.259,8,0.215,27,0.033,34,0.429,35,0.215,36,0.817,42,0.259,43,0.259,49,0.452,63,1.357,66,0.817,69,1.357,81,0.018,82,0.023,83,0.018,84,0.505,86,0.97,87,1.145,88,1.955,89,1.35,90,1.35,91,1.145,97,1.758,98,1.35,99,1.145,101,1.243,102,1.619,107,0.97,108,1.912,110,2.083,112,1.243,146,1.599,147,2.316,148,1.054,149,1.955,307,2.083,499,2.083,500,1.468,505,2.349,617,3.955,618,3.043,619,3.043,620,3.645,621,3.645,622,3.645,623,3.962]],["title/injectables/QuizService.html",[162,1.5,376,1.645]],["body/injectables/QuizService.html",[3,0.209,4,0.209,8,0.174,13,1.897,16,0.719,17,1.093,19,0.783,24,1.433,26,1.609,27,0.033,28,1.252,29,1.485,30,1.609,32,1.259,33,1.188,34,0.336,35,0.174,42,0.209,43,0.209,66,0.66,81,0.015,82,0.02,83,0.015,99,0.924,148,1.614,158,3.301,162,1.969,164,1.897,166,1.522,180,1.803,181,1.747,195,2.456,202,3.911,205,1.547,210,2.456,211,2.136,218,1.655,234,2.743,248,2.159,258,1.897,259,2.136,307,2.077,314,2.933,328,2.136,364,2.391,366,2.487,374,2.136,376,2.159,542,4.659,552,2.136,571,1.897,624,2.456,625,4.108,626,4.108,627,4.108,628,4.108,629,4.108,630,2.943,631,4.732,632,4.108,633,2.943,634,4.108,635,2.943,636,2.943,637,2.943,638,4.108,639,4.732,640,2.943,641,2.943,642,2.943,643,2.943,644,2.943,645,5.388,646,2.943,647,2.456,648,2.943,649,2.943,650,2.136,651,4.108,652,4.108,653,2.943,654,2.943,655,2.943,656,2.943]],["title/modules/SharedModule.html",[84,0.434,657,2.017]],["body/modules/SharedModule.html",[3,0.29,4,0.29,8,0.241,27,0.032,34,0.414,35,0.241,36,0.915,42,0.29,43,0.29,49,0.506,66,0.915,67,1.322,81,0.02,82,0.025,83,0.02,84,0.566,86,1.086,87,1.282,88,2.061,89,1.512,90,1.512,91,1.748,97,1.89,98,1.512,99,1.282,101,1.392,102,1.74,108,2.055,499,2.238,500,1.644,503,2.631,504,3.407,657,4.002,658,3.407,659,4.081,660,3.407,661,4.081]],["title/components/Tab1Page.html",[0,0.015,71,0.702]],["body/components/Tab1Page.html",[0,0.023,1,0.521,2,1.001,3,0.165,4,0.165,5,0.73,6,0.73,7,0.73,8,0.137,10,0.73,11,1.877,12,1.59,14,1.088,16,0.568,17,0.921,19,0.921,24,1.539,26,1.088,27,0.033,28,1.122,29,1.221,30,1.088,32,1.369,33,1.327,34,0.365,35,0.137,36,0.521,42,0.165,43,0.165,49,0.288,50,1.088,51,1.088,52,0.73,53,1.441,54,0.73,55,0.73,56,0.928,57,1.539,58,1.088,59,0.521,60,0.73,61,0.521,62,0.73,63,0.521,64,0.73,65,0.521,66,0.777,67,0.477,68,0.73,69,0.521,70,0.73,71,1.029,72,0.73,73,0.521,74,0.73,75,0.521,76,0.73,77,0.477,78,0.672,79,0.73,80,0.73,81,0.011,82,0.017,83,0.011,148,0.672,163,1.977,166,1.283,168,2.4,180,2.154,181,1.674,203,2.2,206,1.346,209,1.221,214,1.346,218,1.395,226,2.007,351,0.792,353,1.497,355,1.283,356,1.534,358,1.181,364,2.256,365,3.318,370,1.7,379,3.164,403,1.221,404,1.221,414,1.497,416,1.686,491,2.891,509,1.497,578,1.497,650,1.686,662,1.939,663,3.463,664,4.14,665,3.463,666,3.456,667,4.589,668,4.589,669,4.589,670,4.589,671,2.514,672,3.463,673,2.323,674,2.323,675,2.323,676,2.323,677,2.323,678,2.514,679,2.323,680,2.323,681,2.323,682,2.323,683,1.497,684,2.323,685,2.323,686,2.323,687,2.323,688,2.323,689,1.939,690,2.323,691,1.939,692,1.939,693,1.939,694,3.463,695,2.323,696,1.939,697,2.323,698,1.939,699,3.463,700,3.463]],["title/modules/Tab1PageModule.html",[84,0.434,701,2.017]],["body/modules/Tab1PageModule.html",[0,0.019,3,0.269,4,0.269,8,0.224,27,0.033,34,0.434,35,0.224,36,0.851,42,0.269,43,0.269,49,0.47,56,1.388,57,1.01,71,1.37,81,0.019,82,0.024,83,0.019,84,0.526,86,1.01,87,1.192,88,1.993,89,1.406,90,1.406,91,1.192,97,1.805,98,1.406,99,1.192,101,1.295,102,1.662,107,1.01,108,1.963,110,2.138,111,3.537,112,1.295,137,3.537,146,1.666,149,1.406,353,2.447,499,2.138,500,1.529,683,2.447,701,3.989,702,3.169,703,3.169,704,3.796,705,3.796,706,2.755]],["title/components/Tab2Page.html",[0,0.015,73,0.702]],["body/components/Tab2Page.html",[0,0.023,1,0.517,2,0.995,3,0.164,4,0.164,5,0.724,6,0.724,7,0.724,8,0.136,10,0.724,11,1.875,12,1.588,14,1.081,16,0.563,17,0.916,19,0.916,24,1.514,26,1.436,27,0.033,28,1.255,29,1.487,30,1.436,32,1.301,33,1.192,34,0.377,35,0.136,36,0.517,42,0.164,43,0.164,49,0.286,50,1.081,51,1.081,52,0.724,53,1.436,54,0.724,55,0.724,56,0.517,57,0.613,58,1.081,59,0.517,60,0.724,61,0.517,62,0.724,63,0.517,64,0.724,65,0.924,66,1.276,67,0.473,68,0.724,69,0.517,70,0.724,71,0.517,72,0.724,73,1.025,74,0.724,75,0.517,76,0.724,77,0.473,78,0.666,79,0.724,80,0.724,81,0.011,82,0.017,83,0.011,148,0.666,163,1.971,166,1.275,168,2.389,180,2.147,181,1.668,203,2.191,205,1.211,206,1.336,209,1.211,214,1.336,218,1.387,226,1.996,294,1.673,307,1.011,351,0.786,355,1.275,356,1.527,357,1.673,358,1.174,364,2.251,365,3.308,366,2.571,370,1.693,379,3.153,403,1.211,404,1.211,413,1.924,414,1.486,415,1.924,416,1.673,417,1.924,458,2.499,509,1.486,530,1.486,552,2.499,578,1.486,603,1.924,650,1.673,671,2.499,678,2.499,683,1.486,691,1.924,692,1.924,693,1.924,696,1.924,698,1.924,707,1.924,708,3.443,709,4.121,710,3.443,711,4.571,712,3.443,713,3.443,714,3.443,715,2.305,716,3.443,717,2.305,718,2.305,719,3.443,720,2.305,721,2.305,722,2.305,723,2.305,724,2.305,725,2.305,726,2.305,727,2.305,728,2.305,729,2.305]],["title/modules/Tab2PageModule.html",[84,0.434,730,2.017]],["body/modules/Tab2PageModule.html",[0,0.019,3,0.269,4,0.269,8,0.224,27,0.033,34,0.434,35,0.224,36,0.851,42,0.269,43,0.269,49,0.47,65,1.388,66,0.851,73,1.37,81,0.019,82,0.024,83,0.019,84,0.526,86,1.01,87,1.192,88,1.993,89,1.406,90,1.406,91,1.192,97,1.805,98,1.406,99,1.192,101,1.295,102,1.662,107,1.01,108,1.963,110,2.138,111,3.537,112,1.295,137,3.537,146,1.666,149,1.406,499,2.138,500,1.529,530,2.447,683,2.447,706,2.755,730,3.989,731,3.169,732,3.169,733,3.796,734,3.796]],["title/components/Tab3Page.html",[0,0.015,75,0.702]],["body/components/Tab3Page.html",[0,0.02,1,0.51,2,0.986,3,0.162,4,0.162,5,0.715,6,0.715,7,0.715,8,0.134,10,0.715,11,1.87,12,1.584,14,1.071,16,0.556,17,0.907,19,0.606,24,1.409,26,1.285,27,0.033,28,1.19,29,1.209,30,1.285,32,1.088,33,0.986,34,0.322,35,0.134,42,0.162,43,0.162,49,0.282,50,1.071,51,1.071,52,0.715,53,1.427,54,0.715,55,0.715,56,0.51,57,0.606,58,1.071,59,0.51,60,0.715,61,0.51,62,0.715,63,0.51,64,0.715,65,0.51,66,0.765,67,0.467,68,0.715,69,0.51,70,0.715,71,0.51,72,0.715,73,0.51,74,0.715,75,1.019,76,0.715,77,0.467,78,0.658,79,0.715,80,0.715,81,0.011,82,0.017,83,0.011,163,1.96,166,1.263,167,4.547,180,2.135,181,1.659,203,2.177,206,1.319,209,1.196,212,1.9,214,1.319,218,0.917,229,2.847,275,2.198,351,0.776,355,1.263,356,1.515,358,1.163,364,1.96,370,1.683,403,1.196,404,1.196,414,1.467,464,2.847,509,1.467,513,1.9,561,4.547,571,3.656,578,1.467,647,1.9,671,2.476,678,2.476,735,1.9,736,3.411,737,4.09,738,3.411,739,3.411,740,3.411,741,3.411,742,2.276,743,3.411,744,2.276,745,2.276,746,3.411,747,2.276,748,2.276,749,2.276,750,2.276,751,3.411,752,3.411,753,3.411,754,3.411,755,4.543,756,3.411,757,4.543,758,3.411,759,3.411,760,3.411,761,4.543,762,4.543,763,3.411,764,3.411,765,2.276,766,2.276,767,2.276,768,2.276,769,2.276,770,2.276,771,2.276]],["title/modules/Tab3PageModule.html",[84,0.434,772,2.017]],["body/modules/Tab3PageModule.html",[0,0.02,3,0.285,4,0.285,8,0.237,27,0.033,34,0.433,35,0.237,36,0.9,42,0.285,43,0.285,49,0.497,75,1.387,81,0.02,82,0.025,83,0.02,84,0.556,86,1.068,87,1.261,88,2.046,89,1.487,90,1.487,91,1.261,97,1.87,98,1.487,99,1.261,101,1.369,102,1.722,107,1.068,108,2.034,110,2.215,112,1.369,146,1.761,149,1.487,499,2.215,500,1.617,706,2.914,772,3.929,773,3.351,774,3.351,775,4.014,776,4.014]],["title/components/TabsPage.html",[0,0.015,77,0.642]],["body/components/TabsPage.html",[0,0.026,1,0.811,2,1.366,3,0.257,4,0.257,5,1.136,6,1.136,7,1.136,8,0.213,10,1.136,11,2.009,12,1.702,14,1.483,27,0.031,28,1.155,34,0.257,35,0.213,42,0.257,43,0.257,49,0.448,50,1.483,51,1.483,52,1.136,53,1.751,54,1.136,55,1.136,56,0.811,57,1.399,58,1.483,59,0.811,60,1.136,61,0.811,62,1.136,63,0.811,64,1.136,65,0.811,66,1.059,67,0.742,68,1.136,69,0.811,70,1.136,71,0.811,72,1.136,73,0.811,74,1.136,75,0.811,76,1.136,77,1.144,78,1.521,79,1.136,80,1.136,81,0.018,82,0.023,83,0.018,275,3.044,351,1.234,358,1.611,366,2.483,777,3.02,778,5.258,779,4.723]],["title/modules/TabsPageModule.html",[84,0.434,780,2.017]],["body/modules/TabsPageModule.html",[3,0.282,4,0.282,8,0.234,27,0.032,34,0.431,35,0.234,36,0.89,42,0.282,43,0.282,49,0.492,77,1.247,81,0.02,82,0.025,83,0.02,84,0.55,86,1.056,87,1.247,88,2.036,89,1.471,90,1.471,91,1.247,97,1.857,98,1.471,99,1.247,101,1.71,102,1.71,108,2.02,110,2.2,112,1.354,499,2.2,500,1.6,780,4.025,781,3.314,782,3.314,783,3.314,784,3.523,785,3.971,786,3.971,787,3.314]],["title/modules/TabsPageRoutingModule.html",[84,0.434,784,1.814]],["body/modules/TabsPageRoutingModule.html",[0,0.019,3,0.274,4,0.274,8,0.227,27,0.033,34,0.385,35,0.227,42,0.274,43,0.274,77,1.01,81,0.019,82,0.024,83,0.019,86,1.026,91,1.211,101,1.315,102,1.678,107,1.026,146,2.16,147,2.379,148,1.115,149,2.3,150,4.525,154,3.219,155,3.219,156,3.219,275,2.485,366,2.027,505,2.485,623,4.766,666,3.219,784,2.853,787,3.219,788,3.856,789,3.856,790,3.856,791,3.856,792,3.856]],["title/coverage.html",[793,3.578]],["body/coverage.html",[0,0.031,1,0.84,8,0.221,9,3.128,27,0.032,29,0.997,56,0.84,59,0.84,61,0.84,63,0.84,65,0.84,67,0.769,69,0.84,71,0.84,73,0.84,75,0.84,77,0.769,81,0.019,82,0.024,83,0.019,162,2.563,163,1.51,165,3.128,181,1.278,248,1.97,278,3.128,352,3.128,353,2.415,354,3.507,376,1.97,460,3.128,503,2.415,506,3.128,521,3.128,529,3.128,530,2.415,571,4.158,604,3.128,605,3.128,611,3.128,624,3.128,662,3.128,707,3.128,735,3.128,777,3.128,793,3.128,794,3.747,795,3.747,796,3.747,797,3.747,798,3.747,799,5.348,800,4.832,801,4.832,802,3.747,803,4.832,804,3.747,805,3.747,806,3.747,807,3.747,808,3.747]],["title/dependencies.html",[87,1.184,809,2.606]],["body/dependencies.html",[22,2.569,23,2.569,27,0.033,35,0.209,36,0.794,37,3.483,38,2.569,40,2.569,81,0.017,82,0.023,83,0.017,87,1.112,104,3.886,105,3.379,107,0.942,112,1.207,117,4.555,118,5.09,119,3.886,125,2.954,133,2.569,134,2.569,135,2.569,185,2.954,205,1.86,500,1.426,810,6.009,811,3.539,812,3.539,813,3.539,814,3.539,815,5.203,816,3.539,817,4.656,818,3.539,819,3.539,820,3.539,821,3.539,822,3.539,823,3.539,824,3.539,825,3.539,826,3.539,827,3.539,828,3.539,829,3.539,830,3.539,831,3.539,832,3.539,833,3.539,834,3.539,835,3.539,836,3.539,837,3.539,838,3.539,839,3.539,840,3.539,841,3.539,842,3.539,843,3.539,844,3.539,845,3.539,846,3.539,847,3.539,848,3.539,849,3.539]],["title/index.html",[16,0.637,689,2.176,850,2.606]],["body/index.html",[12,1.265,27,0.028,37,2.757,81,0.023,82,0.028,83,0.023,117,3.452,205,2.5,851,4.756,852,4.756,853,4.756,854,4.756,855,4.756,856,4.756,857,4.756,858,4.756,859,4.756,860,4.756,861,4.756,862,4.756,863,4.756,864,4.756,865,5.597,866,4.756,867,4.756]],["title/modules.html",[86,1.14]],["body/modules.html",[27,0.026,81,0.021,82,0.026,83,0.021,85,2.777,86,1.146,96,2.498,105,4.638,495,2.777,516,2.777,617,2.777,657,2.777,701,2.777,730,2.777,772,2.777,780,2.777,784,2.498,868,6.39,869,6.39,870,6.461,871,5.275,872,5.275]],["title/overview.html",[873,3.578]],["body/overview.html",[1,1.324,2,0.952,27,0.032,49,0.408,56,1.125,59,1.125,61,1.125,63,1.125,65,1.125,67,1.232,69,1.125,71,1.125,73,1.125,75,1.125,77,1.03,81,0.016,82,0.022,83,0.016,84,0.456,85,3.804,86,0.876,87,1.034,88,1.22,89,1.22,90,1.22,91,1.034,92,2.749,93,2.749,94,2.749,95,2.749,96,2.909,97,1.644,98,1.22,99,1.034,147,1.445,164,2.123,495,3.723,496,2.749,497,2.749,516,3.462,517,2.749,518,2.749,617,3.723,618,2.749,619,2.749,657,3.614,658,2.749,660,2.749,701,3.723,702,2.749,703,2.749,730,3.723,731,2.749,732,2.749,772,3.462,773,2.749,774,2.749,780,3.723,781,2.749,782,2.749,783,2.749,784,2.909,873,2.749,874,3.293,875,3.293,876,3.293,877,3.293]],["title/routes.html",[147,1.881]],["body/routes.html",[27,0.029,81,0.025,82,0.029,83,0.025,147,2.24]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":571,"title":{},"body":{"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{},"components/Tab3Page.html":{},"coverage.html":{}}}],["0.8.29",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":655,"title":{},"body":{"injectables/QuizService.html":{}}}],["1.3.3",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["100px",{"_index":768,"title":{},"body":{"components/Tab3Page.html":{}}}],["11",{"_index":874,"title":{},"body":{"overview.html":{}}}],["12",{"_index":875,"title":{},"body":{"overview.html":{}}}],["15",{"_index":422,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["2",{"_index":344,"title":{},"body":{"injectables/DbService.html":{}}}],["2.0.2",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":597,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["3",{"_index":876,"title":{},"body":{"overview.html":{}}}],["3.1.2",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["31",{"_index":877,"title":{},"body":{"overview.html":{}}}],["4",{"_index":866,"title":{},"body":{"index.html":{}}}],["4.1.0",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["5.3.0",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["5.9.1",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["543713222320",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["6.3.3",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["7.1.4",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["7.2.2",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["7efpiqoii6ot6jsv7hvivsbbi3m2gvqe.apps.googleusercontent.com",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["a.payload.doc.data",{"_index":334,"title":{},"body":{"injectables/DbService.html":{}}}],["a.payload.doc.id",{"_index":335,"title":{},"body":{"injectables/DbService.html":{}}}],["accessors",{"_index":372,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["actionoptions",{"_index":361,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["actions.map(a",{"_index":333,"title":{},"body":{"injectables/DbService.html":{}}}],["activatedroute",{"_index":467,"title":{},"body":{"components/LobbyPage.html":{},"components/QuizPage.html":{}}}],["actual_component",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["add",{"_index":563,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["addanswer",{"_index":533,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["addanswer(answer",{"_index":541,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["added",{"_index":320,"title":{},"body":{"injectables/DbService.html":{}}}],["addqid",{"_index":367,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["addqid(questionid",{"_index":381,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["addquestionobs",{"_index":625,"title":{},"body":{"injectables/QuizService.html":{}}}],["addquestionobs(identity",{"_index":629,"title":{},"body":{"injectables/QuizService.html":{}}}],["afauth",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["afs",{"_index":286,"title":{},"body":{"injectables/DbService.html":{}}}],["aka",{"_index":867,"title":{},"body":{"index.html":{}}}],["always",{"_index":346,"title":{},"body":{"injectables/DbService.html":{}}}],["android",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":862,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":500,"title":{},"body":{"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/fire/auth",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["angular/fire/firestore",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"injectables/DbService.html":{}}}],["angular/fire/functions",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/forms",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/LobbyFormComponent.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"components/QuestionFormComponent.html":{},"modules/QuizPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageRoutingModule.html":{},"dependencies.html":{}}}],["angularfireauth",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["angularfireauthmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirefunctionsmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebase",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestore",{"_index":284,"title":{},"body":{"injectables/DbService.html":{}}}],["angularfirestoremodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["anon",{"_index":515,"title":{},"body":{"components/LoginPage.html":{}}}],["anonymouslogin",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["ans",{"_index":572,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["answer",{"_index":544,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["answerforms",{"_index":538,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["answers",{"_index":560,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"index.html":{}}}],["app.component",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["applications",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":85,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":96,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["auth",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["auth.googleauthprovider",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.googleauthprovider.credential(gplususer.idtoken",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":163,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"coverage.html":{}}}],["auto",{"_index":567,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["available",{"_index":872,"title":{},"body":{"modules.html":{}}}],["await",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["backdropdismiss",{"_index":692,"title":{},"body":{"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["bar",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["bar/ngx",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["based",{"_index":697,"title":{},"body":{"components/Tab1Page.html":{}}}],["behaviorsubject",{"_index":725,"title":{},"body":{"components/Tab2Page.html":{}}}],["boolean",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QuizService.html":{}}}],["bootstrap",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["bounds",{"_index":649,"title":{},"body":{"injectables/QuizService.html":{}}}],["browse",{"_index":870,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["cancel",{"_index":459,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["capstone",{"_index":852,"title":{},"body":{"index.html":{}}}],["capstoneapp",{"_index":851,"title":{},"body":{"index.html":{}}}],["case",{"_index":303,"title":{},"body":{"injectables/DbService.html":{}}}],["catch",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["category",{"_index":698,"title":{},"body":{"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["categoryfilter",{"_index":667,"title":{},"body":{"components/Tab1Page.html":{}}}],["catfilter",{"_index":711,"title":{},"body":{"components/Tab2Page.html":{}}}],["children",{"_index":623,"title":{},"body":{"modules/QuizPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["choosen",{"_index":860,"title":{},"body":{"index.html":{}}}],["class",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["closemodal",{"_index":368,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["cluster_appmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_lobbypagemodule",{"_index":496,"title":{},"body":{"modules/LobbyPageModule.html":{},"overview.html":{}}}],["cluster_lobbypagemodule_declarations",{"_index":497,"title":{},"body":{"modules/LobbyPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":517,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":518,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_quizpagemodule",{"_index":618,"title":{},"body":{"modules/QuizPageModule.html":{},"overview.html":{}}}],["cluster_quizpagemodule_declarations",{"_index":619,"title":{},"body":{"modules/QuizPageModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":658,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":659,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sharedmodule_exports",{"_index":660,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tab1pagemodule",{"_index":702,"title":{},"body":{"modules/Tab1PageModule.html":{},"overview.html":{}}}],["cluster_tab1pagemodule_declarations",{"_index":703,"title":{},"body":{"modules/Tab1PageModule.html":{},"overview.html":{}}}],["cluster_tab2pagemodule",{"_index":731,"title":{},"body":{"modules/Tab2PageModule.html":{},"overview.html":{}}}],["cluster_tab2pagemodule_declarations",{"_index":732,"title":{},"body":{"modules/Tab2PageModule.html":{},"overview.html":{}}}],["cluster_tab3pagemodule",{"_index":773,"title":{},"body":{"modules/Tab3PageModule.html":{},"overview.html":{}}}],["cluster_tab3pagemodule_declarations",{"_index":774,"title":{},"body":{"modules/Tab3PageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule",{"_index":781,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_declarations",{"_index":782,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["cluster_tabspagemodule_imports",{"_index":783,"title":{},"body":{"modules/TabsPageModule.html":{},"overview.html":{}}}],["collection",{"_index":279,"title":{},"body":{"injectables/DbService.html":{}}}],["collection$(path",{"_index":287,"title":{},"body":{"injectables/DbService.html":{}}}],["collection(path",{"_index":331,"title":{},"body":{"injectables/DbService.html":{}}}],["collection/docid",{"_index":319,"title":{},"body":{"injectables/DbService.html":{}}}],["combine",{"_index":326,"title":{},"body":{"injectables/DbService.html":{}}}],["commonmodule",{"_index":499,"title":{},"body":{"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{}}}],["comparequestions",{"_index":362,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["componentprops",{"_index":727,"title":{},"body":{"components/Tab2Page.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"overview.html":{}}}],["computer",{"_index":856,"title":{},"body":{"index.html":{}}}],["console.log",{"_index":647,"title":{},"body":{"injectables/QuizService.html":{},"components/Tab3Page.html":{}}}],["console.log('adding",{"_index":729,"title":{},"body":{"components/Tab2Page.html":{}}}],["console.log('attempting",{"_index":694,"title":{},"body":{"components/Tab1Page.html":{}}}],["console.log('create",{"_index":441,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["console.log('game",{"_index":688,"title":{},"body":{"components/Tab1Page.html":{}}}],["console.log('making",{"_index":690,"title":{},"body":{"components/Tab1Page.html":{}}}],["console.log('native",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('presenting",{"_index":726,"title":{},"body":{"components/Tab2Page.html":{}}}],["console.log('uploading",{"_index":600,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["console.log('web",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`attemping",{"_index":637,"title":{},"body":{"injectables/QuizService.html":{}}}],["console.log(`attempting",{"_index":642,"title":{},"body":{"injectables/QuizService.html":{}}}],["console.log(`failed",{"_index":488,"title":{},"body":{"components/LobbyPage.html":{}}}],["console.log(`moving",{"_index":482,"title":{},"body":{"components/LobbyPage.html":{}}}],["console.log(err",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(lob",{"_index":481,"title":{},"body":{"components/LobbyPage.html":{}}}],["console.log(result.id",{"_index":452,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["console.table(this.quiz$.questions",{"_index":651,"title":{},"body":{"injectables/QuizService.html":{}}}],["consolelog",{"_index":739,"title":{},"body":{"components/Tab3Page.html":{}}}],["consolelog(obj",{"_index":741,"title":{},"body":{"components/Tab3Page.html":{}}}],["const",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"components/QuestionFormComponent.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"modules/TabsPageRoutingModule.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["constructor(afauth",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(afs",{"_index":283,"title":{},"body":{"injectables/DbService.html":{}}}],["constructor(auth",{"_index":509,"title":{},"body":{"components/LoginPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["constructor(db",{"_index":374,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{}}}],["constructor(platform",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":328,"title":{},"body":{"injectables/DbService.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{}}}],["constructor(public",{"_index":513,"title":{},"body":{"components/LoginPage.html":{},"components/Tab3Page.html":{}}}],["constructor(route",{"_index":466,"title":{},"body":{"components/LobbyPage.html":{},"components/QuizPage.html":{}}}],["cordova",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["core",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":561,"title":{},"body":{"components/QuestionFormComponent.html":{},"components/Tab3Page.html":{}}}],["coverage",{"_index":793,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":456,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["created",{"_index":762,"title":{},"body":{"components/Tab3Page.html":{}}}],["createdat",{"_index":444,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["createlobby",{"_index":369,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["createquestion",{"_index":534,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["creates",{"_index":321,"title":{},"body":{"injectables/DbService.html":{}}}],["creation",{"_index":858,"title":{},"body":{"index.html":{}}}],["creator",{"_index":443,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["credential",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["customize",{"_index":492,"title":{},"body":{"components/LobbyPage.html":{}}}],["data",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{}}}],["data.answers",{"_index":573,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["data.correct",{"_index":570,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["data.question",{"_index":569,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["data.status",{"_index":429,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["data.timer",{"_index":431,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["data.title",{"_index":425,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["date.now",{"_index":445,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["db",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["db.doc$(`users/${user.uid",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["db.service",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QuizService.html":{}}}],["dbservice",{"_index":181,"title":{"injectables/DbService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"coverage.html":{}}}],["declarations",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["default",{"_index":390,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["delete",{"_index":280,"title":{},"body":{"injectables/DbService.html":{},"components/LobbyPage.html":{}}}],["delete(path",{"_index":309,"title":{},"body":{"injectables/DbService.html":{}}}],["deletequestion",{"_index":712,"title":{},"body":{"components/Tab2Page.html":{}}}],["deletequestion(question",{"_index":716,"title":{},"body":{"components/Tab2Page.html":{}}}],["deletequiz",{"_index":463,"title":{},"body":{"components/LobbyPage.html":{}}}],["deletequiz(id",{"_index":470,"title":{},"body":{"components/LobbyPage.html":{}}}],["deletes",{"_index":312,"title":{},"body":{"injectables/DbService.html":{}}}],["dependencies",{"_index":87,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":290,"title":{},"body":{"injectables/DbService.html":{}}}],["designates",{"_index":291,"title":{},"body":{"injectables/DbService.html":{}}}],["detail",{"_index":579,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["device",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["different",{"_index":301,"title":{},"body":{"injectables/DbService.html":{}}}],["directive",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["directives",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["displayname",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["doc",{"_index":281,"title":{},"body":{"injectables/DbService.html":{}}}],["doc$(path",{"_index":313,"title":{},"body":{"injectables/DbService.html":{}}}],["doc(path",{"_index":336,"title":{},"body":{"injectables/DbService.html":{}}}],["doc.payload.data",{"_index":339,"title":{},"body":{"injectables/DbService.html":{}}}],["doc.payload.id",{"_index":338,"title":{},"body":{"injectables/DbService.html":{}}}],["doc/{id",{"_index":324,"title":{},"body":{"injectables/DbService.html":{}}}],["document",{"_index":311,"title":{},"body":{"injectables/DbService.html":{}}}],["documentation",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["duration",{"_index":596,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["dynamic",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["email",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"components/Tab3Page.html":{}}}],["end",{"_index":566,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["entrycomponents",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{}}}],["environment",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment.prod",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["even",{"_index":348,"title":{},"body":{"injectables/DbService.html":{}}}],["evt",{"_index":389,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{}}}],["evt.detail.complete",{"_index":487,"title":{},"body":{"components/LobbyPage.html":{}}}],["evt.detail.from",{"_index":484,"title":{},"body":{"components/LobbyPage.html":{}}}],["evt.detail.to",{"_index":485,"title":{},"body":{"components/LobbyPage.html":{}}}],["evt.detail.value",{"_index":439,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["exists",{"_index":325,"title":{},"body":{"injectables/DbService.html":{}}}],["export",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["exports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":650,"title":{},"body":{"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["fb",{"_index":377,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{}}}],["filter",{"_index":696,"title":{},"body":{"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["firebase",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["firebase/app",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["firestore",{"_index":298,"title":{},"body":{"injectables/DbService.html":{}}}],["flex",{"_index":769,"title":{},"body":{"components/Tab3Page.html":{}}}],["flow",{"_index":770,"title":{},"body":{"components/Tab3Page.html":{}}}],["form",{"_index":357,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"components/Tab2Page.html":{}}}],["form'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["form.component",{"_index":683,"title":{},"body":{"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{}}}],["form.component.html",{"_index":360,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["form.component.scss",{"_index":359,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["form.component.ts",{"_index":354,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:104",{"_index":545,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:108",{"_index":549,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:117",{"_index":547,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:13",{"_index":540,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:15",{"_index":380,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:18",{"_index":554,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:19",{"_index":556,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:21",{"_index":398,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:22",{"_index":400,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["form.component.ts:23",{"_index":555,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:25",{"_index":402,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["form.component.ts:29",{"_index":399,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:30",{"_index":397,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:31",{"_index":394,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:34",{"_index":395,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:38",{"_index":386,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:55",{"_index":558,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:59",{"_index":543,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:66",{"_index":382,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:70",{"_index":388,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:75",{"_index":553,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:77",{"_index":385,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form.component.ts:81",{"_index":546,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["form.component.ts:97",{"_index":384,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["form/lobby",{"_index":353,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"coverage.html":{}}}],["form/question",{"_index":530,"title":{},"body":{"components/QuestionFormComponent.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"coverage.html":{}}}],["formarray",{"_index":406,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["formbuilder",{"_index":378,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["formgroup",{"_index":396,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["formsmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{}}}],["framework",{"_index":865,"title":{},"body":{"index.html":{}}}],["full",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["function",{"_index":302,"title":{},"body":{"injectables/DbService.html":{}}}],["game",{"_index":457,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["games",{"_index":761,"title":{},"body":{"components/Tab3Page.html":{}}}],["gamestart",{"_index":668,"title":{},"body":{"components/Tab1Page.html":{}}}],["getanswerforms",{"_index":557,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["getphoto",{"_index":535,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["getqidforms",{"_index":401,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["getting",{"_index":850,"title":{"index.html":{}},"body":{}}],["google",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["googlelogin",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["googleplus",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["gplus",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["gplususer",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["graph",{"_index":871,"title":{},"body":{"modules.html":{}}}],["guest",{"_index":752,"title":{},"body":{"components/Tab3Page.html":{}}}],["handle",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleredirect",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["header",{"_index":392,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["html",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["id",{"_index":307,"title":{},"body":{"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/QuestionFormComponent.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"components/Tab2Page.html":{}}}],["identifier",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":631,"title":{},"body":{"injectables/QuizService.html":{}}}],["idx",{"_index":578,"title":{},"body":{"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["img",{"_index":765,"title":{},"body":{"components/Tab3Page.html":{}}}],["implements",{"_index":355,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["index's",{"_index":648,"title":{},"body":{"injectables/QuizService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["init",{"_index":638,"title":{},"body":{"injectables/QuizService.html":{}}}],["initializeapp",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":162,"title":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"injectables/QuizService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["injectables",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"injectables/QuizService.html":{},"overview.html":{}}}],["input",{"_index":527,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionItemComponent.html":{}}}],["inputs",{"_index":524,"title":{},"body":{"components/QuestionComponent.html":{},"components/QuestionItemComponent.html":{}}}],["ionic",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"components/QuestionFormComponent.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"dependencies.html":{}}}],["ionic/pro",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["ionic/storage",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{}}}],["ionicmodule.forroot",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicstoragemodule.forroot",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["ios",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["isanonymous",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["isredirect",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":483,"title":{},"body":{"components/LobbyPage.html":{},"components/QuestionItemComponent.html":{}}}],["item'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["item.component",{"_index":504,"title":{},"body":{"modules/LobbyPageModule.html":{},"modules/SharedModule.html":{}}}],["item.component.html",{"_index":607,"title":{},"body":{"components/QuestionItemComponent.html":{}}}],["item.component.scss",{"_index":606,"title":{},"body":{"components/QuestionItemComponent.html":{}}}],["item.component.ts",{"_index":605,"title":{},"body":{"components/QuestionItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:10",{"_index":608,"title":{},"body":{"components/QuestionItemComponent.html":{}}}],["item.component.ts:14",{"_index":610,"title":{},"body":{"components/QuestionItemComponent.html":{}}}],["item.component.ts:9",{"_index":609,"title":{},"body":{"components/QuestionItemComponent.html":{}}}],["item/question",{"_index":503,"title":{},"body":{"modules/LobbyPageModule.html":{},"components/QuestionItemComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["jasmine",{"_index":863,"title":{},"body":{"index.html":{}}}],["join",{"_index":695,"title":{},"body":{"components/Tab1Page.html":{}}}],["joinlobby",{"_index":669,"title":{},"body":{"components/Tab1Page.html":{}}}],["js",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["keyboard",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["keyboardclose",{"_index":598,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["legend",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["length",{"_index":645,"title":{},"body":{"injectables/QuizService.html":{}}}],["list",{"_index":293,"title":{},"body":{"injectables/DbService.html":{}}}],["literal",{"_index":552,"title":{},"body":{"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{},"components/Tab2Page.html":{}}}],["loadchildren",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["loading",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["loading.dismiss",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["loading.present",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["loadingcontroller",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["lob",{"_index":474,"title":{},"body":{"components/LobbyPage.html":{}}}],["lobbies",{"_index":666,"title":{},"body":{"components/Tab1Page.html":{},"modules/TabsPageRoutingModule.html":{}}}],["lobby",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["lobby'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["lobby.id",{"_index":687,"title":{},"body":{"components/Tab1Page.html":{}}}],["lobby.page",{"_index":501,"title":{},"body":{"modules/LobbyPageModule.html":{}}}],["lobby.page.html",{"_index":462,"title":{},"body":{"components/LobbyPage.html":{}}}],["lobby.page.scss",{"_index":461,"title":{},"body":{"components/LobbyPage.html":{}}}],["lobby.title",{"_index":491,"title":{},"body":{"components/LobbyPage.html":{},"components/Tab1Page.html":{}}}],["lobby.uids.length",{"_index":700,"title":{},"body":{"components/Tab1Page.html":{}}}],["lobby/lobby.module#lobbypagemodule",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["lobbyform",{"_index":363,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["lobbyformcomponent",{"_index":56,"title":{"components/LobbyFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["lobbypage",{"_index":59,"title":{"components/LobbyPage.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["lobbypagemodule",{"_index":495,"title":{"modules/LobbyPageModule.html":{}},"body":{"modules/LobbyPageModule.html":{},"modules.html":{},"overview.html":{}}}],["log",{"_index":464,"title":{},"body":{"components/LobbyPage.html":{},"components/Tab3Page.html":{}}}],["log(lob",{"_index":472,"title":{},"body":{"components/LobbyPage.html":{}}}],["login",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginPage.html":{}}}],["login'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["login.page",{"_index":520,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["login.page.html",{"_index":508,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":507,"title":{},"body":{"components/LoginPage.html":{}}}],["login/login.module#loginpagemodule",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loginpage",{"_index":61,"title":{"components/LoginPage.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":516,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["logout",{"_index":764,"title":{},"body":{"components/Tab3Page.html":{}}}],["losses",{"_index":757,"title":{},"body":{"components/Tab3Page.html":{}}}],["makelobby",{"_index":670,"title":{},"body":{"components/Tab1Page.html":{}}}],["map",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{}}}],["map(actions",{"_index":332,"title":{},"body":{"injectables/DbService.html":{}}}],["map(doc",{"_index":337,"title":{},"body":{"injectables/DbService.html":{}}}],["map(u",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["maps",{"_index":304,"title":{},"body":{"injectables/DbService.html":{}}}],["mark",{"_index":565,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["matching",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["max",{"_index":766,"title":{},"body":{"components/Tab3Page.html":{}}}],["merge",{"_index":323,"title":{},"body":{"injectables/DbService.html":{}}}],["mes",{"_index":550,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["message",{"_index":595,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["method",{"_index":296,"title":{},"body":{"injectables/DbService.html":{}}}],["methods",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["mobile",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["modal",{"_index":365,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["modal.present",{"_index":693,"title":{},"body":{"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["modalcontroller",{"_index":379,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["module",{"_index":84,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["modules",{"_index":86,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["move",{"_index":626,"title":{},"body":{"injectables/QuizService.html":{}}}],["move(from",{"_index":632,"title":{},"body":{"injectables/QuizService.html":{}}}],["name",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["native/core",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["native/firebase",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["native/firebase/ngx",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["native/google",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["native/splash",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["nativegooglelogin",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["new",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["newquizobs",{"_index":627,"title":{},"body":{"injectables/QuizService.html":{}}}],["newquizobs(id",{"_index":634,"title":{},"body":{"injectables/QuizService.html":{}}}],["ngmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["ngoninit",{"_index":370,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["null",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{}}}],["number",{"_index":542,"title":{},"body":{"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{}}}],["obj",{"_index":743,"title":{},"body":{"components/Tab3Page.html":{}}}],["object",{"_index":317,"title":{},"body":{"injectables/DbService.html":{}}}],["obs",{"_index":639,"title":{},"body":{"injectables/QuizService.html":{}}}],["observable",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"injectables/QuizService.html":{}}}],["odd",{"_index":345,"title":{},"body":{"injectables/DbService.html":{}}}],["of(null",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["offline",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["old",{"_index":327,"title":{},"body":{"injectables/DbService.html":{}}}],["one",{"_index":308,"title":{},"body":{"injectables/DbService.html":{}}}],["oninit",{"_index":356,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["optional",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionFormComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["order",{"_index":493,"title":{},"body":{"components/LobbyPage.html":{}}}],["out",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"components/QuestionFormComponent.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["overview",{"_index":873,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":809,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":329,"title":{},"body":{"injectables/DbService.html":{}}}],["parameter",{"_index":295,"title":{},"body":{"injectables/DbService.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionFormComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["path",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["path.split('/').filter(v",{"_index":341,"title":{},"body":{"injectables/DbService.html":{}}}],["pathmatch",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["pending",{"_index":420,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["photo",{"_index":601,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["photourl",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/QuestionFormComponent.html":{}}}],["pipe",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{}}}],["platform",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["plugin",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["plus",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["plus/ngx",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["preloadallmodules",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presentquestionform",{"_index":713,"title":{},"body":{"components/Tab2Page.html":{}}}],["presentquestionform(question",{"_index":719,"title":{},"body":{"components/Tab2Page.html":{}}}],["presenttoast",{"_index":536,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["presenttoast(mes",{"_index":548,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["private",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuestionFormComponent.html":{}}}],["profile",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["project",{"_index":853,"title":{},"body":{"index.html":{}}}],["promise",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{}}}],["properties",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionFormComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["provide",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"injectables/QuizService.html":{}}}],["provider",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["providers",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["public",{"_index":364,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionFormComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["pull",{"_index":292,"title":{},"body":{"injectables/DbService.html":{}}}],["pushes",{"_index":305,"title":{},"body":{"injectables/DbService.html":{}}}],["put",{"_index":306,"title":{},"body":{"injectables/DbService.html":{},"components/QuestionFormComponent.html":{}}}],["q1",{"_index":409,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["q1.id",{"_index":411,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["q2",{"_index":410,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["q2.id",{"_index":412,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["qid",{"_index":448,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["qidforms",{"_index":373,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["qids",{"_index":434,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["qs",{"_index":375,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuizPage.html":{}}}],["query",{"_index":288,"title":{},"body":{"injectables/DbService.html":{}}}],["question",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["question'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["question.component.html",{"_index":523,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.component.scss",{"_index":522,"title":{},"body":{"components/QuestionComponent.html":{}}}],["question.id",{"_index":603,"title":{},"body":{"components/QuestionFormComponent.html":{},"components/Tab2Page.html":{}}}],["question.question",{"_index":458,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/Tab2Page.html":{}}}],["question/question.component",{"_index":622,"title":{},"body":{"modules/QuizPageModule.html":{}}}],["questioncomponent",{"_index":63,"title":{"components/QuestionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["questionform",{"_index":531,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["questionformcomponent",{"_index":65,"title":{"components/QuestionFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["questionid",{"_index":383,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionItemComponent.html":{}}}],["questionids",{"_index":438,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["questionitemcomponent",{"_index":67,"title":{"components/QuestionItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["questions",{"_index":366,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"injectables/QuizService.html":{},"components/Tab2Page.html":{},"components/TabsPage.html":{},"modules/TabsPageRoutingModule.html":{}}}],["questiontimerlength",{"_index":430,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["quiz",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LobbyPage.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{}}}],["quiz'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["quiz.page",{"_index":621,"title":{},"body":{"modules/QuizPageModule.html":{}}}],["quiz.page.html",{"_index":613,"title":{},"body":{"components/QuizPage.html":{}}}],["quiz.page.scss",{"_index":612,"title":{},"body":{"components/QuizPage.html":{}}}],["quiz/quiz.module#quizpagemodule",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["quizpage",{"_index":69,"title":{"components/QuizPage.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["quizpagemodule",{"_index":617,"title":{"modules/QuizPageModule.html":{}},"body":{"modules/QuizPageModule.html":{},"modules.html":{},"overview.html":{}}}],["quizservice",{"_index":376,"title":{"injectables/QuizService.html":{}},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["reactiveformsmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{}}}],["redirect",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirectto",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["ref",{"_index":416,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["ref.limit(10",{"_index":686,"title":{},"body":{"components/Tab1Page.html":{}}}],["ref.limit(25",{"_index":417,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/Tab2Page.html":{}}}],["references",{"_index":297,"title":{},"body":{"injectables/DbService.html":{}}}],["regex",{"_index":564,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["reorder",{"_index":489,"title":{},"body":{"components/LobbyPage.html":{}}}],["reorderquestions",{"_index":465,"title":{},"body":{"components/LobbyPage.html":{}}}],["reorderquestions(evt",{"_index":476,"title":{},"body":{"components/LobbyPage.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}],["result",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["result.id",{"_index":455,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["result.user",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["return",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["returns",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"injectables/QuizService.html":{}}}],["root'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["route",{"_index":469,"title":{},"body":{"components/LobbyPage.html":{},"components/QuizPage.html":{}}}],["router",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{}}}],["routereusestrategy",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["routermodule.forchild",{"_index":706,"title":{},"body":{"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{}}}],["routermodule.forchild(routes",{"_index":505,"title":{},"body":{"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":147,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":771,"title":{},"body":{"components/Tab3Page.html":{}}}],["rxjs",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"injectables/QuizService.html":{},"components/Tab2Page.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["science",{"_index":857,"title":{},"body":{"index.html":{}}}],["scopes",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["screen",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["segments",{"_index":340,"title":{},"body":{"injectables/DbService.html":{}}}],["segments.length",{"_index":343,"title":{},"body":{"injectables/DbService.html":{}}}],["select",{"_index":393,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["sends",{"_index":300,"title":{},"body":{"injectables/DbService.html":{}}}],["senior",{"_index":854,"title":{},"body":{"index.html":{}}}],["services/auth.service",{"_index":404,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LoginPage.html":{},"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["services/db.service",{"_index":403,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuestionFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["services/quiz.service",{"_index":407,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuizPage.html":{}}}],["setcorrect",{"_index":537,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["setcorrect(val",{"_index":551,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["setquestions",{"_index":371,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["setquestions(evt",{"_index":387,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["setredirect",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["setredirect(val",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/question",{"_index":502,"title":{},"body":{"modules/LobbyPageModule.html":{}}}],["sharedmodule",{"_index":657,"title":{"modules/SharedModule.html":{}},"body":{"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":747,"title":{},"body":{"components/Tab3Page.html":{}}}],["sharereplay(1",{"_index":749,"title":{},"body":{"components/Tab3Page.html":{}}}],["sign",{"_index":514,"title":{},"body":{"components/LoginPage.html":{}}}],["signout",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["snapshotchanges",{"_index":299,"title":{},"body":{"injectables/DbService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"modules/LobbyPageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"modules/QuizPageModule.html":{},"injectables/QuizService.html":{},"modules/SharedModule.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["splashscreen",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["sqlite",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["src/app/app",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/lobby/lobby.module.ts",{"_index":498,"title":{},"body":{"modules/LobbyPageModule.html":{}}}],["src/app/lobby/lobby.page.ts",{"_index":460,"title":{},"body":{"components/LobbyPage.html":{},"coverage.html":{}}}],["src/app/lobby/lobby.page.ts:11",{"_index":468,"title":{},"body":{"components/LobbyPage.html":{}}}],["src/app/lobby/lobby.page.ts:14",{"_index":478,"title":{},"body":{"components/LobbyPage.html":{}}}],["src/app/lobby/lobby.page.ts:18",{"_index":475,"title":{},"body":{"components/LobbyPage.html":{}}}],["src/app/lobby/lobby.page.ts:23",{"_index":473,"title":{},"body":{"components/LobbyPage.html":{}}}],["src/app/lobby/lobby.page.ts:27",{"_index":477,"title":{},"body":{"components/LobbyPage.html":{}}}],["src/app/lobby/lobby.page.ts:37",{"_index":471,"title":{},"body":{"components/LobbyPage.html":{}}}],["src/app/login/login.module.ts",{"_index":519,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/login/login.page.ts",{"_index":506,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/login/login.page.ts:11",{"_index":511,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:8",{"_index":510,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/login/login.page.ts:9",{"_index":512,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/quiz/question/question.component.ts",{"_index":521,"title":{},"body":{"components/QuestionComponent.html":{},"coverage.html":{}}}],["src/app/quiz/question/question.component.ts:12",{"_index":526,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/quiz/question/question.component.ts:9",{"_index":525,"title":{},"body":{"components/QuestionComponent.html":{}}}],["src/app/quiz/quiz.module.ts",{"_index":620,"title":{},"body":{"modules/QuizPageModule.html":{}}}],["src/app/quiz/quiz.page.ts",{"_index":611,"title":{},"body":{"components/QuizPage.html":{},"coverage.html":{}}}],["src/app/quiz/quiz.page.ts:10",{"_index":616,"title":{},"body":{"components/QuizPage.html":{}}}],["src/app/quiz/quiz.page.ts:12",{"_index":615,"title":{},"body":{"components/QuizPage.html":{}}}],["src/app/quiz/quiz.page.ts:9",{"_index":614,"title":{},"body":{"components/QuizPage.html":{}}}],["src/app/services/auth.service.ts",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:117",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:43",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:48",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:62",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:68",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:72",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:76",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:97",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/db.service.ts",{"_index":278,"title":{},"body":{"injectables/DbService.html":{},"coverage.html":{}}}],["src/app/services/db.service.ts:21",{"_index":289,"title":{},"body":{"injectables/DbService.html":{}}}],["src/app/services/db.service.ts:36",{"_index":315,"title":{},"body":{"injectables/DbService.html":{}}}],["src/app/services/db.service.ts:54",{"_index":318,"title":{},"body":{"injectables/DbService.html":{}}}],["src/app/services/db.service.ts:71",{"_index":310,"title":{},"body":{"injectables/DbService.html":{}}}],["src/app/services/db.service.ts:9",{"_index":285,"title":{},"body":{"injectables/DbService.html":{}}}],["src/app/services/quiz.service.ts",{"_index":624,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["src/app/services/quiz.service.ts:20",{"_index":635,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:26",{"_index":630,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:32",{"_index":633,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/services/quiz.service.ts:9",{"_index":628,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/question",{"_index":604,"title":{},"body":{"components/QuestionItemComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":661,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/tab1/lobby",{"_index":352,"title":{},"body":{"components/LobbyFormComponent.html":{},"coverage.html":{}}}],["src/app/tab1/tab1.module.ts",{"_index":704,"title":{},"body":{"modules/Tab1PageModule.html":{}}}],["src/app/tab1/tab1.page.ts",{"_index":662,"title":{},"body":{"components/Tab1Page.html":{},"coverage.html":{}}}],["src/app/tab1/tab1.page.ts:14",{"_index":672,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:17",{"_index":680,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:18",{"_index":681,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:19",{"_index":682,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:22",{"_index":677,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:28",{"_index":679,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:32",{"_index":674,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:36",{"_index":676,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:45",{"_index":675,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab1/tab1.page.ts:49",{"_index":673,"title":{},"body":{"components/Tab1Page.html":{}}}],["src/app/tab2/question",{"_index":529,"title":{},"body":{"components/QuestionFormComponent.html":{},"coverage.html":{}}}],["src/app/tab2/tab2.module.ts",{"_index":733,"title":{},"body":{"modules/Tab2PageModule.html":{}}}],["src/app/tab2/tab2.page.ts",{"_index":707,"title":{},"body":{"components/Tab2Page.html":{},"coverage.html":{}}}],["src/app/tab2/tab2.page.ts:16",{"_index":714,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab2/tab2.page.ts:19",{"_index":722,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab2/tab2.page.ts:20",{"_index":723,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab2/tab2.page.ts:21",{"_index":724,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab2/tab2.page.ts:24",{"_index":718,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab2/tab2.page.ts:30",{"_index":721,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab2/tab2.page.ts:34",{"_index":720,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab2/tab2.page.ts:44",{"_index":717,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab2/tab2.page.ts:48",{"_index":715,"title":{},"body":{"components/Tab2Page.html":{}}}],["src/app/tab3/tab3.module.ts",{"_index":775,"title":{},"body":{"modules/Tab3PageModule.html":{}}}],["src/app/tab3/tab3.page.ts",{"_index":735,"title":{},"body":{"components/Tab3Page.html":{},"coverage.html":{}}}],["src/app/tab3/tab3.page.ts:12",{"_index":740,"title":{},"body":{"components/Tab3Page.html":{}}}],["src/app/tab3/tab3.page.ts:14",{"_index":746,"title":{},"body":{"components/Tab3Page.html":{}}}],["src/app/tab3/tab3.page.ts:16",{"_index":744,"title":{},"body":{"components/Tab3Page.html":{}}}],["src/app/tab3/tab3.page.ts:23",{"_index":742,"title":{},"body":{"components/Tab3Page.html":{}}}],["src/app/tab3/tab3.page.ts:27",{"_index":745,"title":{},"body":{"components/Tab3Page.html":{}}}],["src/app/tabs/tabs.module.ts",{"_index":785,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["src/app/tabs/tabs.page.ts",{"_index":777,"title":{},"body":{"components/TabsPage.html":{},"coverage.html":{}}}],["src/app/tabs/tabs.router.module.ts",{"_index":788,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["start",{"_index":494,"title":{},"body":{"components/LobbyPage.html":{}}}],["started",{"_index":689,"title":{"index.html":{}},"body":{"components/Tab1Page.html":{}}}],["statements",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":419,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["statusbar",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["storage",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["string",{"_index":314,"title":{},"body":{"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"injectables/QuizService.html":{}}}],["styles",{"_index":351,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["styleurls",{"_index":358,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["support",{"_index":868,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":869,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["switchmap(user",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["tab1",{"_index":663,"title":{},"body":{"components/Tab1Page.html":{}}}],["tab1'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["tab1.page",{"_index":705,"title":{},"body":{"modules/Tab1PageModule.html":{}}}],["tab1.page.html",{"_index":665,"title":{},"body":{"components/Tab1Page.html":{}}}],["tab1.page.scss",{"_index":664,"title":{},"body":{"components/Tab1Page.html":{}}}],["tab1/tab1.module#tab1pagemodule",{"_index":789,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["tab1page",{"_index":71,"title":{"components/Tab1Page.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"modules/Tab1PageModule.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["tab1pagemodule",{"_index":701,"title":{"modules/Tab1PageModule.html":{}},"body":{"modules/Tab1PageModule.html":{},"modules.html":{},"overview.html":{}}}],["tab2",{"_index":708,"title":{},"body":{"components/Tab2Page.html":{}}}],["tab2'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["tab2.page",{"_index":734,"title":{},"body":{"modules/Tab2PageModule.html":{}}}],["tab2.page.html",{"_index":710,"title":{},"body":{"components/Tab2Page.html":{}}}],["tab2.page.scss",{"_index":709,"title":{},"body":{"components/Tab2Page.html":{}}}],["tab2/tab2.module#tab2pagemodule",{"_index":790,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["tab2page",{"_index":73,"title":{"components/Tab2Page.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"modules/Tab2PageModule.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["tab2pagemodule",{"_index":730,"title":{"modules/Tab2PageModule.html":{}},"body":{"modules/Tab2PageModule.html":{},"modules.html":{},"overview.html":{}}}],["tab3",{"_index":736,"title":{},"body":{"components/Tab3Page.html":{}}}],["tab3'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["tab3.page",{"_index":776,"title":{},"body":{"modules/Tab3PageModule.html":{}}}],["tab3.page.html",{"_index":738,"title":{},"body":{"components/Tab3Page.html":{}}}],["tab3.page.scss",{"_index":737,"title":{},"body":{"components/Tab3Page.html":{}}}],["tab3/tab3.module#tab3pagemodule",{"_index":791,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["tab3page",{"_index":75,"title":{"components/Tab3Page.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"modules/Tab3PageModule.html":{},"components/TabsPage.html":{},"coverage.html":{},"overview.html":{}}}],["tab3pagemodule",{"_index":772,"title":{"modules/Tab3PageModule.html":{}},"body":{"modules/Tab3PageModule.html":{},"modules.html":{},"overview.html":{}}}],["table",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["tabs.page",{"_index":787,"title":{},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{}}}],["tabs.page.html",{"_index":779,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.page.scss",{"_index":778,"title":{},"body":{"components/TabsPage.html":{}}}],["tabs.router.module",{"_index":786,"title":{},"body":{"modules/TabsPageModule.html":{}}}],["tabs/profile",{"_index":792,"title":{},"body":{"modules/TabsPageRoutingModule.html":{}}}],["tabs/tabs.module#tabspagemodule",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tabspage",{"_index":77,"title":{"components/TabsPage.html":{}},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{},"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["tabspagemodule",{"_index":780,"title":{"modules/TabsPageModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["tabspageroutingmodule",{"_index":784,"title":{"modules/TabsPageRoutingModule.html":{}},"body":{"modules/TabsPageModule.html":{},"modules/TabsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"components/QuestionFormComponent.html":{}}}],["take(1",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["tc",{"_index":532,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["temp",{"_index":652,"title":{},"body":{"injectables/QuizService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["templateurl",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["testing",{"_index":864,"title":{},"body":{"index.html":{}}}],["this.addanswer(ans",{"_index":574,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.addqid(questionid",{"_index":440,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.afauth.auth.getredirectresult",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signinanonymously",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signinwithcredential",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signinwithredirect(provider",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.auth.signout",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afauth.authstate.pipe",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.afs",{"_index":330,"title":{},"body":{"injectables/DbService.html":{}}}],["this.afs.collection(path).add(data",{"_index":347,"title":{},"body":{"injectables/DbService.html":{}}}],["this.afs.doc(path).delete",{"_index":350,"title":{},"body":{"injectables/DbService.html":{}}}],["this.afs.doc(path).set(data",{"_index":349,"title":{},"body":{"injectables/DbService.html":{}}}],["this.answerforms.at(0).get('ans').value",{"_index":585,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.answerforms.at(1).get('ans').value",{"_index":586,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.answerforms.at(2).get('ans').value",{"_index":587,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.answerforms.at(3).get('ans').value",{"_index":588,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.answerforms.push",{"_index":576,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.auth.uid",{"_index":442,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["this.auth.user$.pipe",{"_index":414,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["this.db.collection$('lobbies",{"_index":685,"title":{},"body":{"components/Tab1Page.html":{}}}],["this.db.collection$('questions",{"_index":415,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/Tab2Page.html":{}}}],["this.db.delete(`lobbies/${id",{"_index":490,"title":{},"body":{"components/LobbyPage.html":{}}}],["this.db.delete(`questions/${question.id",{"_index":728,"title":{},"body":{"components/Tab2Page.html":{}}}],["this.db.doc$(`lobbies/${id",{"_index":640,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.db.doc$(`questions/${identity",{"_index":643,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.db.doc$(`users/${user.uid",{"_index":748,"title":{},"body":{"components/Tab3Page.html":{}}}],["this.db.updateat(`lobbies/${id",{"_index":451,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.db.updateat(`questions/${id",{"_index":590,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.db.updateat(path",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.fb.array",{"_index":435,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["this.fb.group",{"_index":424,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["this.gplus.login",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.handleredirect",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.initializeapp",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isredirect",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loadingcontroller.create",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lobbies",{"_index":684,"title":{},"body":{"components/Tab1Page.html":{}}}],["this.lobbyform",{"_index":423,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.lobbyform.get('qids",{"_index":408,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.lobbyform.value",{"_index":447,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.lobbyform.value.qids",{"_index":449,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.lobbyform.valuechanges.subscribe(console.log",{"_index":436,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.modal.create",{"_index":691,"title":{},"body":{"components/Tab1Page.html":{},"components/Tab2Page.html":{}}}],["this.modal.dismiss",{"_index":453,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["this.nativegooglelogin",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.platform.is('cordova",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.platform.ready().then",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["this.presenttoast('question",{"_index":591,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.qidforms.push(this.fb.control(questionid",{"_index":437,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.qs.addquestionobs(qid",{"_index":450,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.qs.move(evt.detail.from",{"_index":486,"title":{},"body":{"components/LobbyPage.html":{}}}],["this.qs.newquizobs(id",{"_index":480,"title":{},"body":{"components/LobbyPage.html":{}}}],["this.question",{"_index":562,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.question.id",{"_index":583,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.questionform",{"_index":568,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.questionform.get('answers",{"_index":575,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.questionform.get('correct').setvalue(val.detail.value",{"_index":582,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.questionform.get('correct').value",{"_index":584,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.questionform.get('question').value",{"_index":589,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.questions",{"_index":413,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/Tab2Page.html":{}}}],["this.quiz",{"_index":636,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.quiz$.data",{"_index":641,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.quiz$.questions.length",{"_index":646,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.quiz$.questions.push",{"_index":644,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.quiz$.questions.splice(from",{"_index":654,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.quiz$.questions.splice(to",{"_index":656,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.quiz$.questions[from",{"_index":653,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":479,"title":{},"body":{"components/LobbyPage.html":{}}}],["this.router.navigate",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/lobby",{"_index":454,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["this.setredirect(false",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.setredirect(true",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.splashscreen.hide",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storage.get('authredirect",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.storage.set('authredirect",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tc.create",{"_index":594,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["this.updateuserdata(credential.user",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updateuserdata(result.user",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updateuserdata(user",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"components/Tab3Page.html":{}}}],["timer",{"_index":421,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["title",{"_index":418,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["toast",{"_index":593,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["toast.present",{"_index":599,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["toastcontroller",{"_index":539,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["todo",{"_index":559,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["topromise",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["trackbyid",{"_index":671,"title":{},"body":{"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["trackbyid(idx",{"_index":678,"title":{},"body":{"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["trivia",{"_index":859,"title":{},"body":{"index.html":{}}}],["true",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/QuestionFormComponent.html":{},"injectables/QuizService.html":{}}}],["try",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["type",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/DbService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"coverage.html":{}}}],["typeof",{"_index":580,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["u",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["u.uid",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["uid",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["uids",{"_index":446,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["unknown",{"_index":754,"title":{},"body":{"components/Tab3Page.html":{}}}],["update",{"_index":602,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["updateat",{"_index":282,"title":{},"body":{"injectables/DbService.html":{}}}],["updateat(path",{"_index":316,"title":{},"body":{"injectables/DbService.html":{}}}],["updates",{"_index":322,"title":{},"body":{"injectables/DbService.html":{}}}],["updateuserdata",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdata(undefined",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploaded",{"_index":592,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["use",{"_index":861,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/Tab3Page.html":{}}}],["user.displayname",{"_index":751,"title":{},"body":{"components/Tab3Page.html":{}}}],["user.email",{"_index":753,"title":{},"body":{"components/Tab3Page.html":{}}}],["user.id",{"_index":750,"title":{},"body":{"components/Tab3Page.html":{}}}],["user.lobbiescreated",{"_index":763,"title":{},"body":{"components/Tab3Page.html":{}}}],["user.losses",{"_index":758,"title":{},"body":{"components/Tab3Page.html":{}}}],["user.questionscorrect",{"_index":759,"title":{},"body":{"components/Tab3Page.html":{}}}],["user.questionswrong",{"_index":760,"title":{},"body":{"components/Tab3Page.html":{}}}],["user.wins",{"_index":756,"title":{},"body":{"components/Tab3Page.html":{}}}],["users",{"_index":699,"title":{},"body":{"components/Tab1Page.html":{}}}],["users/${uid",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["v",{"_index":342,"title":{},"body":{"injectables/DbService.html":{}}}],["val",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"components/QuestionFormComponent.html":{}}}],["val.detail.value",{"_index":581,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["validators",{"_index":405,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["validators.max(500",{"_index":433,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["validators.maxlength(100",{"_index":577,"title":{},"body":{"components/QuestionFormComponent.html":{}}}],["validators.maxlength(250",{"_index":428,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["validators.min(0",{"_index":432,"title":{},"body":{"components/LobbyFormComponent.html":{}}}],["validators.minlength(1",{"_index":427,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["validators.required",{"_index":426,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["value",{"_index":391,"title":{},"body":{"components/LobbyFormComponent.html":{},"components/QuestionFormComponent.html":{}}}],["var",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{},"components/TabsPage.html":{}}}],["void",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LobbyFormComponent.html":{},"components/LobbyPage.html":{},"components/LoginPage.html":{},"components/QuestionComponent.html":{},"components/QuestionFormComponent.html":{},"components/QuestionItemComponent.html":{},"components/QuizPage.html":{},"injectables/QuizService.html":{},"components/Tab1Page.html":{},"components/Tab2Page.html":{},"components/Tab3Page.html":{}}}],["web",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["webclientid",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["webview",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["whitelist",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["width",{"_index":767,"title":{},"body":{"components/Tab3Page.html":{}}}],["wins",{"_index":755,"title":{},"body":{"components/Tab3Page.html":{}}}],["works",{"_index":528,"title":{},"body":{"components/QuestionComponent.html":{}}}],["year",{"_index":855,"title":{},"body":{"index.html":{}}}],["yes",{"_index":294,"title":{},"body":{"injectables/DbService.html":{},"components/QuestionFormComponent.html":{},"components/Tab2Page.html":{}}}],["zone.js",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/LobbyPageModule.html":{},"modules/LoginPageModule.html":{},"modules/QuizPageModule.html":{},"modules/SharedModule.html":{},"modules/Tab1PageModule.html":{},"modules/Tab2PageModule.html":{},"modules/Tab3PageModule.html":{},"modules/TabsPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// mobile applications (cordova plugin)\nimport { Firebase } from '@ionic-native/firebase/ngx';\n\n// web applications\nimport { environment } from '../environments/environment.prod';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireFunctionsModule } from '@angular/fire/functions';\n\nimport { IonicStorageModule } from '@ionic/storage';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    AngularFireFunctionsModule,\n    IonicStorageModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n\n  providers: [\n    Firebase,\n    GooglePlus,\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'tabs', loadChildren: './tabs/tabs.module#TabsPageModule' },\n  { path: 'login', loadChildren: './login/login.module#LoginPageModule'},\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'lobby', loadChildren: './lobby/lobby.module#LobbyPageModule' },\n  { path: 'quiz', loadChildren: './quiz/quiz.module#QuizPageModule' },\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                anonymousLogin\n                            \n                            \n                                    Async\n                                googleLogin\n                            \n                            \n                                    Private\n                                    Async\n                                handleRedirect\n                            \n                            \n                                    Async\n                                isRedirect\n                            \n                            \n                                    Async\n                                nativeGoogleLogin\n                            \n                            \n                                setRedirect\n                            \n                            \n                                    Async\n                                signOut\n                            \n                            \n                                uid\n                            \n                            \n                                    Private\n                                updateUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afAuth: AngularFireAuth, db: DbService, router: Router, gplus: GooglePlus, platform: Platform, loadingController: LoadingController, storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afAuth\n                                                  \n                                                        \n                                                                    AngularFireAuth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gplus\n                                                  \n                                                        \n                                                                    GooglePlus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            anonymousLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    anonymousLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            googleLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    googleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            handleRedirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleRedirect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isRedirect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isRedirect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            nativeGoogleLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    nativeGoogleLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRedirect\n                        \n                        \n                    \n                \n            \n            \n                \nsetRedirect(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uid\n                        \n                        \n                    \n                \n            \n            \n                \nuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateUserData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserData(undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, take, map } from 'rxjs/operators';\nimport { DbService } from './db.service';\nimport { Platform, LoadingController } from '@ionic/angular';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\nimport { Storage } from '@ionic/storage';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user$: Observable;\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private db: DbService,\n    private router: Router,\n    private gplus: GooglePlus,\n    private platform: Platform,\n    private loadingController: LoadingController,\n    private storage: Storage\n  ) {\n    this.user$ = this.afAuth.authState.pipe(\n      switchMap(user => (user ? db.doc$(`users/${user.uid}`) : of(null)))\n    );\n\n    this.handleRedirect();\n  }\n\n  uid() {\n    return this.user$\n      .pipe(\n        take(1),\n        map(u => u && u.uid)\n      )\n      .toPromise();\n  }\n\n  async anonymousLogin() {\n    const credential = await this.afAuth.auth.signInAnonymously();\n    return await this.updateUserData(credential.user);\n  }\n\n  private updateUserData({ uid, email, displayName, photoURL, isAnonymous }) {\n    const path = `users/${uid}`;\n\n    const data = {\n      uid,\n      email,\n      displayName,\n      photoURL,\n      isAnonymous\n    };\n\n    return this.db.updateAt(path, data);\n  }\n\n  async signOut() {\n    await this.afAuth.auth.signOut();\n    return this.router.navigate(['/']);\n  }\n\n  // GOOGLE AUTH\n  setRedirect(val: boolean) {\n    this.storage.set('authRedirect', val);\n  }\n\n  async isRedirect() {\n    return await this.storage.get('authRedirect');\n  }\n\n  async googleLogin() {\n    try {\n      let user;\n\n      if (this.platform.is('cordova')) {\n        console.log('Native Login');\n        user = await this.nativeGoogleLogin();\n      } else {\n        console.log('Web Login');\n        await this.setRedirect(true);\n        const provider = new auth.GoogleAuthProvider();\n        user = await this.afAuth.auth.signInWithRedirect(provider);\n      }\n\n      return await this.updateUserData(user);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // Handle login with redirect for web Google auth\n  private async handleRedirect() {\n    if ((await this.isRedirect()) !== true) {\n      return null;\n    }\n    const loading = await this.loadingController.create();\n    await loading.present();\n\n    const result = await this.afAuth.auth.getRedirectResult();\n\n    if (result.user) {\n      await this.updateUserData(result.user);\n    }\n\n    await loading.dismiss();\n\n    await this.setRedirect(false);\n\n    return result;\n  }\n\n  async nativeGoogleLogin(): Promise {\n    const gplusUser = await this.gplus.login({\n      webClientId:\n        '543713222320-7efpiqoii6ot6jsv7hvivsbbi3m2gvqe.apps.googleusercontent.com',\n      offline: true,\n      scopes: 'profile email'\n    });\n\n    return await this.afAuth.auth.signInWithCredential(\n      auth.GoogleAuthProvider.credential(gplusUser.idToken)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DbService.html":{"url":"injectables/DbService.html","title":"injectable - DbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/db.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collection$\n                            \n                            \n                                delete\n                            \n                            \n                                doc$\n                            \n                            \n                                updateAt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(afs: AngularFirestore)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/db.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        afs\n                                                  \n                                                        \n                                                                    AngularFirestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collection$\n                        \n                        \n                    \n                \n            \n            \n                \ncollection$(path, query?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/db.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        designates which collection to pull the list from\n\n                                    \n                                \n                                \n                                    query\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional parameter\n.collection method references the data in firestore\n.snapshotChanges returns the data as an Observable\n.pipe sends the Observable to a different function in this case maps\npushes observable into a map function to put the id and the data into one observable\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(path)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/db.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to document\nDeletes document from firestore\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            doc$\n                        \n                        \n                    \n                \n            \n            \n                \ndoc$(path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/db.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAt\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAt(path: string, data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/db.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        'collection' or 'collection/docID'\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new data to be added to\nCreates or updates data on a collection or document\nmerge in else is for if a doc/{id} exists it will combine the old and the new\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbService {\n  constructor(private afs: AngularFirestore) {}\n\n  /**\n   * @param path designates which collection to pull the list from\n   * @param query optional parameter\n   *\n   * .collection method references the data in firestore\n   * .snapshotChanges returns the data as an Observable\n   * .pipe sends the Observable to a different function in this case maps\n   * pushes observable into a map function to put the id and the data into one observable\n   */\n  collection$(path, query?) {\n    return this.afs\n      .collection(path, query)\n      .snapshotChanges()\n      .pipe(\n        map(actions => {\n          return actions.map(a => {\n            const data: Object = a.payload.doc.data();\n            const id = a.payload.doc.id;\n            return { id, ...data };\n          });\n        })\n      );\n  }\n\n  doc$(path: string): Observable {\n    return this.afs\n      .doc(path)\n      .snapshotChanges()\n      .pipe(\n        map(doc => {\n          return { id: doc.payload.id, ...doc.payload.data() };\n        })\n      );\n  }\n\n  /**\n   * @param path 'collection' or 'collection/docID'\n   * @param data new data to be added to\n   *\n   * Creates or updates data on a collection or document\n   * merge in else is for if a doc/{id} exists it will combine the old and the new\n   */\n  updateAt(path: string, data: Object): Promise {\n    const segments = path.split('/').filter(v => v);\n    if (segments.length % 2) {\n      // Odd is always a collection\n      return this.afs.collection(path).add(data);\n    } else {\n      // Even is always a document\n      return this.afs.doc(path).set(data, { merge: true });\n    }\n  }\n\n  /**\n   *\n   * @param path path to document\n   *\n   * Deletes document from firestore\n   */\n  delete(path) {\n    return this.afs.doc(path).delete();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyFormComponent.html":{"url":"components/LobbyFormComponent.html","title":"component - LobbyFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LobbyFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tab1/lobby-form/lobby-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby-form\n            \n\n            \n                styleUrls\n                ./lobby-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./lobby-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionOptions\n                            \n                            \n                                compareQuestions\n                            \n                            \n                                lobbyForm\n                            \n                            \n                                    Public\n                                modal\n                            \n                            \n                                questions\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQid\n                            \n                            \n                                    Async\n                                closeModal\n                            \n                            \n                                    Async\n                                createLobby\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    qidForms\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(db: DbService, auth: AuthService, qs: QuizService, fb: FormBuilder, modal: ModalController, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/tab1/lobby-form/lobby-form.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qs\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addQid\n                        \n                        \n                    \n                \n            \n            \n                \naddQid(questionID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    questionID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createLobby\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLobby()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setQuestions\n                        \n                        \n                    \n                \n            \n            \n                \nsetQuestions(evt)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    header: 'Select Questions'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compareQuestions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lobbyForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        qidForms\n                    \n                \n\n                \n                    \n                        getqidForms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tab1/lobby-form/lobby-form.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { DbService } from '../../services/db.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { switchMap } from 'rxjs/operators';\nimport { QuizService } from '../../services/quiz.service';\n\n@Component({\n  selector: 'app-lobby-form',\n  templateUrl: './lobby-form.component.html',\n  styleUrls: ['./lobby-form.component.scss']\n})\nexport class LobbyFormComponent implements OnInit {\n  constructor(\n    private db: DbService,\n    private auth: AuthService,\n    private qs: QuizService,\n    private fb: FormBuilder,\n    public modal: ModalController,\n    public router: Router\n  ) {}\n\n  get qidForms() {\n    return this.lobbyForm.get('qids') as FormArray;\n  }\n\n  questions;\n  lobbyForm: FormGroup;\n  actionOptions: any = {\n    header: 'Select Questions'\n  };\n  compareQuestions = (q1, q2) => {\n    return q1 && q2 ? q1.id === q2.id : q1 === q2;\n  }\n\n  ngOnInit() {\n    this.questions = this.auth.user$.pipe(\n      switchMap(user => this.db.collection$('questions', ref => ref.limit(25)))\n    );\n    const data = {\n      title: '',\n      status: 'pending',\n      timer: 15\n    };\n    this.lobbyForm = this.fb.group({\n      title: [\n        data.title,\n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(250)\n        ]\n      ],\n      status: [data.status, [Validators.required]],\n      questionTimerLength: [\n        data.timer,\n        [Validators.required, Validators.min(0), Validators.max(500)]\n      ],\n      qids: this.fb.array([], Validators.required)\n    });\n    this.lobbyForm.valueChanges.subscribe(console.log);\n  }\n\n  addQid(questionID: string) {\n    this.qidForms.push(this.fb.control(questionID, Validators.required));\n  }\n\n  setQuestions(evt) {\n    const questionIds = evt.detail.value;\n    for (const questionId of questionIds) {\n      this.addQid(questionId);\n    }\n  }\n\n  async createLobby() {\n    console.log('Create new Lobby');\n    const uid = await this.auth.uid();\n    const id = '';\n    const data = {\n      creator: uid,\n      createdAt: Date.now(),\n      uids: [uid],\n      ...this.lobbyForm.value\n    };\n\n    for (const qid of this.lobbyForm.value.qids) {\n      await this.qs.addQuestionObs(qid);\n    }\n    const result = await this.db.updateAt(`lobbies/${id}`, data);\n    console.log(result.id);\n    this.modal.dismiss();\n    this.router.navigate(['/lobby', result.id]);\n  }\n\n  async closeModal() {\n    this.modal.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    Create New Game Lobby\n    \n      \n        \n    \n  \n\n\n\n  \n    \n      \n        \n          \n            Title:\n            \n          \n        \n      \n      \n        \n          \n            \n              Question Timer\n            \n            \n              \n                \n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              {{ question.question }}\n            \n          \n        \n      \n      \n        \n          \n            Cancel\n          \n        \n        \n          \n            Create!\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./lobby-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create New Game Lobby                                                                  Title:                                                                                      Question Timer                                                                                                                                                                          {{ question.question }}                                                                        Cancel                                                Create!                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LobbyFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyPage.html":{"url":"components/LobbyPage.html","title":"component - LobbyPage","body":"\n                   \n\n\n\n\n\n  Components\n  LobbyPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lobby/lobby.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby\n            \n\n            \n                styleUrls\n                ./lobby.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./lobby.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                qs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteQuiz\n                            \n                            \n                                log\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reorderQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, qs: QuizService, db: DbService)\n                    \n                \n                        \n                            \n                                Defined in src/app/lobby/lobby.page.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qs\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteQuiz\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteQuiz(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.page.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(lob)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lob\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.page.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reorderQuestions\n                        \n                        \n                    \n                \n            \n            \n                \nreorderQuestions(evt)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.page.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            qs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuizService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lobby/lobby.page.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from '../services/quiz.service';\nimport { DbService } from '../services/db.service';\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.page.html',\n  styleUrls: ['./lobby.page.scss']\n})\nexport class LobbyPage implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    public qs: QuizService,\n    private db: DbService\n  ) {}\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.qs.newQuizObs(id);\n  }\n\n  log(lob) {\n    console.log(lob);\n  }\n\n  reorderQuestions(evt) {\n    console.log(`Moving item from ${evt.detail.from} to ${evt.detail.to}`);\n    if (this.qs.move(evt.detail.from, evt.detail.to)) {\n      evt.detail.complete();\n      return;\n    } else {\n      console.log(`failed to reorder Questions`);\n    }\n  }\n\n  deleteQuiz(id: string) {\n    this.db.delete(`lobbies/${id}`);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ lobby.title }} Lobby\n      \n      \n        \n          \n            Customize Question Order\n            \n              \n                \n              \n            \n          \n        \n      \n      \n        \n           Log \n        \n      \n    \n  \n\n  \n    \n      \n        \n          Start Quiz\n        \n      \n      \n        \n          Delete Lobby\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./lobby.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ lobby.title }} Lobby                                          Customize Question Order                                                                                                                     Log                                                   Start Quiz                                      Delete Lobby                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LobbyPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LobbyPageModule.html":{"url":"modules/LobbyPageModule.html","title":"module - LobbyPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LobbyPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LobbyPageModule\n\n\n\ncluster_LobbyPageModule_declarations\n\n\n\n\nLobbyPage\n\nLobbyPage\n\n\n\nLobbyPageModule\n\nLobbyPageModule\n\nLobbyPageModule -->\n\nLobbyPage->LobbyPageModule\n\n\n\n\n\nQuestionItemComponent\n\nQuestionItemComponent\n\nLobbyPageModule -->\n\nQuestionItemComponent->LobbyPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lobby/lobby.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LobbyPage\n                        \n                        \n                            QuestionItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LobbyPage } from './lobby.page';\nimport { QuestionItemComponent } from '../shared/question-item/question-item.component';\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: LobbyPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LobbyPage, QuestionItemComponent]\n})\nexport class LobbyPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.page.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.page.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.page.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss']\n})\nexport class LoginPage implements OnInit {\n  constructor(public auth: AuthService) {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n       \n    \n    \n      \n        \n          Sign-In Anon\n        \n      \n    \n    \n      \n        \n          Sign-In Google\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                             Sign-In Anon                                              Sign-In Google                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionComponent.html":{"url":"components/QuestionComponent.html","title":"component - QuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz/question/question.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question\n            \n\n            \n                styleUrls\n                ./question.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                question$\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz/question/question.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        question$\n                    \n                \n                        \n                            \n                                    Defined in src/app/quiz/question/question.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/question/question.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss']\n})\nexport class QuestionComponent implements OnInit {\n  @Input() question$;\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  question works!\n\n\n    \n\n    \n                \n                    ./question.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  question works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionFormComponent.html":{"url":"components/QuestionFormComponent.html","title":"component - QuestionFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tab2/question-form/question-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-form\n            \n\n            \n                styleUrls\n                ./question-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modal\n                            \n                            \n                                question\n                            \n                            \n                                questionForm\n                            \n                            \n                                    Public\n                                tc\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addAnswer\n                            \n                            \n                                    Async\n                                closeModal\n                            \n                            \n                                    Async\n                                createQuestion\n                            \n                            \n                                getPhoto\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentToast\n                            \n                            \n                                setCorrect\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    answerForms\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(db: DbService, auth: AuthService, fb: FormBuilder, modal: ModalController, tc: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tab2/question-form/question-form.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tc\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addAnswer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addAnswer(answer?: string, index?: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/question-form/question-form.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/question-form/question-form.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createQuestion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/question-form/question-form.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPhoto\n                        \n                        \n                    \n                \n            \n            \n                \ngetPhoto()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/question-form/question-form.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/question-form/question-form.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast(mes: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/question-form/question-form.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mes\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCorrect\n                        \n                        \n                    \n                \n            \n            \n                \nsetCorrect(val: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/question-form/question-form.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab2/question-form/question-form.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab2/question-form/question-form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questionForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab2/question-form/question-form.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ToastController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab2/question-form/question-form.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        answerForms\n                    \n                \n\n                \n                    \n                        getanswerForms()\n                    \n                \n                            \n                                \n                                    Defined in src/app/tab2/question-form/question-form.component.ts:55\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { DbService } from '../../services/db.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.scss']\n})\nexport class QuestionFormComponent implements OnInit {\n  constructor(\n    private db: DbService,\n    private auth: AuthService,\n    private fb: FormBuilder,\n    public modal: ModalController,\n    public tc: ToastController\n  ) {}\n\n  question: any;\n  questionForm: FormGroup;\n\n  ngOnInit() {\n    // TODO: Take out default answers\n    const data = {\n      question: '',\n      correct: null,\n      answers: ['', '', '', ''],\n      photoURL: '',\n      ...this.question\n    };\n    // TODO: Add regex for a Question Mark at end of question or auto put there?\n    this.questionForm = this.fb.group({\n      question: [\n        data.question,\n        [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(250)\n        ]\n      ],\n      correct: [data.correct, [Validators.required]],\n      answers: this.fb.array([], [Validators.required])\n    });\n\n    let i = 0;\n    for (const ans of data.answers) {\n      this.addAnswer(ans, i);\n      i++;\n    }\n  }\n\n  get answerForms() {\n    return this.questionForm.get('answers') as FormArray;\n  }\n\n  private addAnswer(answer?: string, index?: number) {\n    this.answerForms.push(\n      this.fb.group({\n        ans: [\n          answer,\n          [\n            Validators.required,\n            Validators.minLength(1),\n            Validators.maxLength(100)\n          ]\n        ],\n        idx: [index, []]\n      })\n    );\n  }\n\n  setCorrect(val: { detail: { value: string } }) {\n    if (typeof val.detail.value === 'number') {\n      this.questionForm.get('correct').setValue(val.detail.value);\n    }\n  }\n\n  async createQuestion() {\n    const uid = await this.auth.uid();\n    const id = this.question ? this.question.id : '';\n    const data = {\n      creator: uid,\n      createdAt: Date.now(),\n      ...this.question,\n      correct: this.questionForm.get('correct').value,\n      answers: [\n        this.answerForms.at(0).get('ans').value,\n        this.answerForms.at(1).get('ans').value,\n        this.answerForms.at(2).get('ans').value,\n        this.answerForms.at(3).get('ans').value\n      ],\n      question: this.questionForm.get('question').value,\n      photoURL: ''\n    };\n\n    await this.db.updateAt(`questions/${id}`, data);\n    this.modal.dismiss();\n    this.presentToast('Question is uploaded');\n  }\n\n  async closeModal() {\n    this.modal.dismiss();\n  }\n\n  async presentToast(mes: string) {\n    const toast = await this.tc.create({\n      message: mes,\n      duration: 2000,\n      keyboardClose: true\n    });\n    toast.present();\n  }\n\n  getPhoto() {\n    console.log('Uploading a photo');\n  }\n}\n\n    \n\n    \n        \n  \n    Create New Question\n    Update {{ question.id }}\n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          Question:\n          \n        \n      \n      \n        \n          \n            \n              Answers:\n            \n            \n              \n                \n                  \n                  \n                  \n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n      \n        \n          Cancel\n        \n        \n          \n            {{ question ? \"Update!\" : \"Create!\" }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./question-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create New Question    Update {{ question.id }}                                                            Question:                                                                          Answers:                                                                                                                                                                                                                                                                  Cancel                                      {{ question ? \"Update!\" : \"Create!\" }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionItemComponent.html":{"url":"components/QuestionItemComponent.html","title":"component - QuestionItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/question-item/question-item.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-item\n            \n\n            \n                styleUrls\n                ./question-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./question-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                question$\n                            \n                            \n                                questionId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/question-item/question-item.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        question$\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/question-item/question-item.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        questionId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/question-item/question-item.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/question-item/question-item.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-question-item',\n  templateUrl: './question-item.component.html',\n  styleUrls: ['./question-item.component.scss']\n})\nexport class QuestionItemComponent implements OnInit {\n  @Input() questionId: string;\n  @Input() question$: any;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    \n      {{ question.question }}\n    \n    \n  \n\n\n\n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./question-item.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ question.question }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuizPage.html":{"url":"components/QuizPage.html","title":"component - QuizPage","body":"\n                   \n\n\n\n\n\n  Components\n  QuizPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/quiz/quiz.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quiz\n            \n\n            \n                styleUrls\n                ./quiz.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./quiz.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                qs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, qs: QuizService)\n                    \n                \n                        \n                            \n                                Defined in src/app/quiz/quiz.page.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qs\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/quiz/quiz.page.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            qs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuizService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/quiz/quiz.page.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { QuizService } from '../services/quiz.service';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.page.html',\n  styleUrls: ['./quiz.page.scss']\n})\nexport class QuizPage implements OnInit {\n  constructor(private route: ActivatedRoute, public qs: QuizService) {}\n\n  ngOnInit() {}\n}\n\n    \n\n    \n        \n  \n    quiz\n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./quiz.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      quiz  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuizPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizPageModule.html":{"url":"modules/QuizPageModule.html","title":"module - QuizPageModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuizPageModule\n\n\n\ncluster_QuizPageModule_declarations\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\n\n\nQuizPageModule\n\nQuizPageModule\n\nQuizPageModule -->\n\nQuestionComponent->QuizPageModule\n\n\n\n\n\nQuizPage\n\nQuizPage\n\nQuizPageModule -->\n\nQuizPage->QuizPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/quiz/quiz.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            QuestionComponent\n                        \n                        \n                            QuizPage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuizPage } from './quiz.page';\nimport { QuestionComponent } from './question/question.component';\n\nconst routes: Routes = [\n  {\n    path: ':id',\n    component: QuizPage,\n    children: [\n      {\n        path: 'question',\n        children: [\n          {\n            path: ':id',\n            component: QuestionComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [QuizPage, QuestionComponent]\n})\nexport class QuizPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quiz.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quiz$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addQuestionObs\n                            \n                            \n                                    Public\n                                move\n                            \n                            \n                                    Public\n                                newQuizObs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: DbService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quiz.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addQuestionObs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuestionObs(identity: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            move\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    move(from: number, to: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            newQuizObs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newQuizObs(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quiz.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quiz$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quiz.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DbService } from './db.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n  quiz$: { data: any; questions: any };\n\n  constructor(private db: DbService) {\n    const data = null;\n    const questions = [];\n    this.quiz$ = {\n      data,\n      questions\n    };\n  }\n\n  public newQuizObs(id: string) {\n    console.log(`attemping to init new observable quiz: ${id}`);\n    const obs = this.db.doc$(`lobbies/${id}`);\n    this.quiz$.data = obs;\n  }\n\n  public addQuestionObs(identity: string) {\n    console.log(`attempting to init new observable question: ${identity}`);\n    const observable = this.db.doc$(`questions/${identity}`);\n    this.quiz$.questions.push({ id: identity, obs: observable });\n  }\n\n  public move(from: number, to: number) {\n    const length = this.quiz$.questions.length;\n    if (from = length || to = length) {\n      console.log(\n        `index's are out of bounds for length: ${length}, from: ${from}, to: ${to}`\n      );\n      return false;\n    }\n    console.table(this.quiz$.questions);\n    const temp = this.quiz$.questions[from];\n    this.quiz$.questions.splice(from, 1);\n    this.quiz$.questions.splice(to, 0, temp);\n    console.table(this.quiz$.questions);\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nQuestionItemComponent\n\nQuestionItemComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nQuestionItemComponent->SharedModule\n\n\n\n\n\nQuestionItemComponent \n\nQuestionItemComponent \n\nQuestionItemComponent  -->\n\nSharedModule->QuestionItemComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            QuestionItemComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuestionItemComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { QuestionItemComponent } from './question-item/question-item.component';\n@NgModule({\n  declarations: [QuestionItemComponent],\n  imports: [CommonModule, IonicModule],\n  exports: [QuestionItemComponent]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab1Page.html":{"url":"components/Tab1Page.html","title":"component - Tab1Page","body":"\n                   \n\n\n\n\n\n  Components\n  Tab1Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tab1/tab1.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab1\n            \n\n            \n                styleUrls\n                tab1.page.scss\n            \n\n\n\n            \n                templateUrl\n                tab1.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                db\n                            \n                            \n                                lobbies\n                            \n                            \n                                    Public\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                categoryFilter\n                            \n                            \n                                gameStart\n                            \n                            \n                                joinLobby\n                            \n                            \n                                    Async\n                                makeLobby\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackbyId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, db: DbService, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tab1/tab1.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            categoryFilter\n                        \n                        \n                    \n                \n            \n            \n                \ncategoryFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/tab1.page.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gameStart\n                        \n                        \n                    \n                \n            \n            \n                \ngameStart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/tab1.page.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            joinLobby\n                        \n                        \n                    \n                \n            \n            \n                \njoinLobby()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/tab1.page.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            makeLobby\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    makeLobby()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/tab1.page.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/tab1.page.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackbyId\n                        \n                        \n                    \n                \n            \n            \n                \ntrackbyId(idx, lobby)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab1/tab1.page.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lobby\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab1/tab1.page.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DbService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab1/tab1.page.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lobbies\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tab1/tab1.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab1/tab1.page.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { DbService } from '../services/db.service';\nimport { switchMap } from 'rxjs/operators';\n\nimport { ModalController } from '@ionic/angular';\nimport { LobbyFormComponent } from './lobby-form/lobby-form.component';\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page implements OnInit {\n  lobbies;\n\n  constructor(\n    public auth: AuthService,\n    public db: DbService,\n    public modal: ModalController\n  ) {}\n\n  ngOnInit() {\n    this.lobbies = this.auth.user$.pipe(\n      switchMap(user => this.db.collection$('lobbies', ref => ref.limit(10)))\n    );\n  }\n\n  trackbyId(idx, lobby) {\n    return lobby.id;\n  }\n\n  gameStart() {\n    console.log('Game has Started');\n  }\n\n  async makeLobby() {\n    console.log('making a lobby');\n    const modal = await this.modal.create({\n      component: LobbyFormComponent,\n      backdropDismiss: false\n    });\n    return await modal.present();\n  }\n\n  joinLobby() {\n    console.log('attempting to join lobby');\n  }\n\n  categoryFilter() {\n    console.log('attempting to filter based on category');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Lobby\n    \n  \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n          {{ lobby.title }}\n        \n      \n      \n         Users In Lobby: \n         {{ lobby.uids.length }}\n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    tab1.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Lobby                                                                        {{ lobby.title }}                             Users In Lobby:          {{ lobby.uids.length }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Tab1Page'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Tab1PageModule.html":{"url":"modules/Tab1PageModule.html","title":"module - Tab1PageModule","body":"\n                   \n\n\n\n\n    Modules\n    Tab1PageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Tab1PageModule\n\n\n\ncluster_Tab1PageModule_declarations\n\n\n\n\nLobbyFormComponent\n\nLobbyFormComponent\n\n\n\nTab1PageModule\n\nTab1PageModule\n\nTab1PageModule -->\n\nLobbyFormComponent->Tab1PageModule\n\n\n\n\n\nTab1Page\n\nTab1Page\n\nTab1PageModule -->\n\nTab1Page->Tab1PageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tab1/tab1.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LobbyFormComponent\n                        \n                        \n                            Tab1Page\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LobbyFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { Tab1Page } from './tab1.page';\nimport { LobbyFormComponent } from './lobby-form/lobby-form.component';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\n  ],\n  declarations: [Tab1Page, LobbyFormComponent],\n  entryComponents: [LobbyFormComponent]\n})\nexport class Tab1PageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab2Page.html":{"url":"components/Tab2Page.html","title":"component - Tab2Page","body":"\n                   \n\n\n\n\n\n  Components\n  Tab2Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tab2/tab2.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab2\n            \n\n            \n                styleUrls\n                tab2.page.scss\n            \n\n\n\n            \n                templateUrl\n                tab2.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                db\n                            \n                            \n                                    Public\n                                modal\n                            \n                            \n                                questions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catFilter\n                            \n                            \n                                deleteQuestion\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                presentQuestionForm\n                            \n                            \n                                trackbyId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, db: DbService, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/tab2/tab2.page.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catFilter\n                        \n                        \n                    \n                \n            \n            \n                \ncatFilter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/tab2.page.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteQuestion\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteQuestion(question: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/tab2.page.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/tab2.page.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            presentQuestionForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentQuestionForm(question?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/tab2.page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    question\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackbyId\n                        \n                        \n                    \n                \n            \n            \n                \ntrackbyId(idx: any, question: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab2/tab2.page.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    question\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab2/tab2.page.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DbService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab2/tab2.page.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab2/tab2.page.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tab2/tab2.page.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { DbService } from '../services/db.service';\nimport { switchMap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ModalController } from '@ionic/angular';\nimport { QuestionFormComponent } from './question-form/question-form.component';\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page implements OnInit {\n  questions;\n\n  constructor(\n    public auth: AuthService,\n    public db: DbService,\n    public modal: ModalController\n  ) {}\n\n  ngOnInit() {\n    this.questions = this.auth.user$.pipe(\n      switchMap(user => this.db.collection$('questions', ref => ref.limit(25)))\n    );\n  }\n\n  trackbyId(idx: any, question: { id: any }) {\n    return question.id;\n  }\n\n  async presentQuestionForm(question?: any) {\n    console.log('presenting question form...');\n    const modal = await this.modal.create({\n      component: QuestionFormComponent,\n      componentProps: { question },\n      backdropDismiss: false\n    });\n    return await modal.present();\n  }\n\n  deleteQuestion(question: any) {\n    this.db.delete(`questions/${question.id}`);\n  }\n\n  catFilter() {\n    console.log('adding a category filter');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Questions\n    \n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n         {{ question.question }}\n      \n      \n        \n           \n        \n        \n           \n        \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    tab2.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Questions                                                       {{ question.question }}                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Tab2Page'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Tab2PageModule.html":{"url":"modules/Tab2PageModule.html","title":"module - Tab2PageModule","body":"\n                   \n\n\n\n\n    Modules\n    Tab2PageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Tab2PageModule\n\n\n\ncluster_Tab2PageModule_declarations\n\n\n\n\nQuestionFormComponent\n\nQuestionFormComponent\n\n\n\nTab2PageModule\n\nTab2PageModule\n\nTab2PageModule -->\n\nQuestionFormComponent->Tab2PageModule\n\n\n\n\n\nTab2Page\n\nTab2Page\n\nTab2PageModule -->\n\nTab2Page->Tab2PageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tab2/tab2.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            QuestionFormComponent\n                        \n                        \n                            Tab2Page\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            QuestionFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\nimport { QuestionFormComponent } from './question-form/question-form.component';\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\n  ],\n  declarations: [Tab2Page, QuestionFormComponent],\n  entryComponents: [QuestionFormComponent]\n})\nexport class Tab2PageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Tab3Page.html":{"url":"components/Tab3Page.html","title":"component - Tab3Page","body":"\n                   \n\n\n\n\n\n  Components\n  Tab3Page\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tab3/tab3.page.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tab3\n            \n\n            \n                styleUrls\n                tab3.page.scss\n            \n\n\n\n            \n                templateUrl\n                tab3.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                db\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                consoleLog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, db: DbService)\n                    \n                \n                        \n                            \n                                Defined in src/app/tab3/tab3.page.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        DbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            consoleLog\n                        \n                        \n                    \n                \n            \n            \n                \nconsoleLog(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab3/tab3.page.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab3/tab3.page.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackById\n                        \n                        \n                    \n                \n            \n            \n                \ntrackById(idx, user)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tab3/tab3.page.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab3/tab3.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DbService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tab3/tab3.page.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/tab3/tab3.page.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { DbService } from '../services/db.service';\nimport { switchMap, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page implements OnInit {\n  user;\n\n  constructor(public auth: AuthService, public db: DbService) {}\n\n  ngOnInit() {\n    this.user = this.auth.user$.pipe(\n      switchMap(user => this.db.doc$(`users/${user.uid}`)),\n      shareReplay(1)\n    );\n  }\n\n  consoleLog(obj: any) {\n    console.log({ obj });\n  }\n\n  trackById(idx, user) {\n    return user.id;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Profile\n    \n  \n\n\n\n  \n    \n      \n        \n          \n            \n              \n                \n                  {{ user.displayName || \"Guest User\" }}\n                \n                \n                  \n                \n              \n            \n            \n              \n                 Email: {{ user.email || \"unknown\" }} \n              \n            \n          \n        \n      \n      \n        \n          \n            Wins\n            \n              {{ user.wins || \"0\" }}\n            \n          \n        \n        \n          \n            Losses\n            \n              {{ user.losses || \"0\" }}\n            \n          \n        \n      \n      \n        \n          \n            Correct\n            \n              {{ user.questionsCorrect || \"0\" }}\n            \n          \n        \n        \n          \n            In-Correct\n            \n              {{ user.questionsWrong || \"0\" }}\n            \n          \n        \n      \n      \n        \n          \n            Games Created\n            \n              {{ user.lobbiesCreated || \"0\" }}\n            \n          \n        \n      \n      \n        \n          \n            Logout\n          \n        \n      \n      \n        \n          \n            Log\n          \n        \n      \n    \n\n    \n      \n        \n          \n            \n              \n            \n            \n              \n                \n              \n            \n            \n              \n              \n            \n          \n        \n      \n      \n        \n          \n            Wins\n            \n              \n            \n          \n        \n        \n          \n            Losses\n            \n              \n            \n          \n        \n      \n      \n        \n          \n            Correct\n            \n              \n            \n          \n        \n        \n          \n            In-Correct\n            \n              \n            \n          \n        \n      \n      \n        \n          \n            Games Created\n            \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    tab3.page.scss\n                \n                img {\n  max-width: 100px;\n  flex-flow: row;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profile                                                                                                {{ user.displayName || \"Guest User\" }}                                                                                                                                       Email: {{ user.email || \"unknown\" }}                                                                                       Wins                          {{ user.wins || \"0\" }}                                                            Losses                          {{ user.losses || \"0\" }}                                                                        Correct                          {{ user.questionsCorrect || \"0\" }}                                                            In-Correct                          {{ user.questionsWrong || \"0\" }}                                                                        Games Created                          {{ user.lobbiesCreated || \"0\" }}                                                                        Logout                                                            Log                                                                                                                                                                                                                                                                                  Wins                                                                                      Losses                                                                                                  Correct                                                                                      In-Correct                                                                                                  Games Created                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Tab3Page'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/Tab3PageModule.html":{"url":"modules/Tab3PageModule.html","title":"module - Tab3PageModule","body":"\n                   \n\n\n\n\n    Modules\n    Tab3PageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_Tab3PageModule\n\n\n\ncluster_Tab3PageModule_declarations\n\n\n\n\nTab3Page\n\nTab3Page\n\n\n\nTab3PageModule\n\nTab3PageModule\n\nTab3PageModule -->\n\nTab3Page->Tab3PageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tab3/tab3.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Tab3Page\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }])\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsPage.html":{"url":"components/TabsPage.html","title":"component - TabsPage","body":"\n                   \n\n\n\n\n\n  Components\n  TabsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tabs/tabs.page.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tabs\n            \n\n            \n                styleUrls\n                tabs.page.scss\n            \n\n\n\n            \n                templateUrl\n                tabs.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {}\n\n    \n\n    \n        \n  \n    \n      \n      Lobby\n    \n\n    \n      \n      Questions\n    \n\n    \n      \n      Profile\n    \n  \n\n\n    \n\n    \n                \n                    tabs.page.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Lobby                    Questions                    Profile      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'LobbyFormComponent', 'selector': 'app-lobby-form'},{'name': 'LobbyPage', 'selector': 'app-lobby'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'QuestionComponent', 'selector': 'app-question'},{'name': 'QuestionFormComponent', 'selector': 'app-question-form'},{'name': 'QuestionItemComponent', 'selector': 'app-question-item'},{'name': 'QuizPage', 'selector': 'app-quiz'},{'name': 'Tab1Page', 'selector': 'app-tab1'},{'name': 'Tab2Page', 'selector': 'app-tab2'},{'name': 'Tab3Page', 'selector': 'app-tab3'},{'name': 'TabsPage', 'selector': 'app-tabs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageModule.html":{"url":"modules/TabsPageModule.html","title":"module - TabsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabs/tabs.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TabsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TabsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs.router.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabsPageRoutingModule.html":{"url":"modules/TabsPageRoutingModule.html","title":"module - TabsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    TabsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/tabs/tabs.router.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TabsPage,\n    children: [\n      {\n        path: 'lobbies',\n        children: [\n          {\n            path: '',\n            loadChildren: '../tab1/tab1.module#Tab1PageModule'\n          }\n        ]\n      },\n      {\n        path: 'questions',\n        children: [\n          {\n            path: '',\n            loadChildren: '../tab2/tab2.module#Tab2PageModule'\n          }\n        ]\n      },\n      {\n        path: 'profile',\n        children: [\n          {\n            path: '',\n            loadChildren: '../tab3/tab3.module#Tab3PageModule'\n          }\n        ]\n      },\n      {\n        path: '',\n        redirectTo: '/tabs/profile',\n        pathMatch: 'full'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lobby/lobby.page.ts\n            \n            component\n            LobbyPage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/quiz/question/question.component.ts\n            \n            component\n            QuestionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/quiz/quiz.page.ts\n            \n            component\n            QuizPage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/db.service.ts\n            \n            injectable\n            DbService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/question-item/question-item.component.ts\n            \n            component\n            QuestionItemComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/tab1/lobby-form/lobby-form.component.ts\n            \n            component\n            LobbyFormComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tab1/tab1.page.ts\n            \n            component\n            Tab1Page\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/tab2/question-form/question-form.component.ts\n            \n            component\n            QuestionFormComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/tab2/tab2.page.ts\n            \n            component\n            Tab2Page\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/tab3/tab3.page.ts\n            \n            component\n            Tab3Page\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/tabs/tabs.page.ts\n            \n            component\n            TabsPage\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^7.2.2\n        \n            @angular/core : ^7.2.2\n        \n            @angular/fire : ^5.1.2\n        \n            @angular/forms : ^7.2.2\n        \n            @angular/http : ^7.2.2\n        \n            @angular/platform-browser : ^7.2.2\n        \n            @angular/platform-browser-dynamic : ^7.2.2\n        \n            @angular/router : ^7.2.2\n        \n            @ionic-native/core : ^5.0.0\n        \n            @ionic-native/firebase : ^5.3.0\n        \n            @ionic-native/google-plus : ^5.3.0\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.0.0\n        \n            @ionic/angular : ^4.1.0\n        \n            @ionic/pro : 2.0.4\n        \n            @ionic/storage : ^2.2.0\n        \n            cordova-android : 7.1.4\n        \n            cordova-ios : 4.5.5\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-firebase : ~2.0.5\n        \n            cordova-plugin-googleplus : 7.0.1\n        \n            cordova-plugin-ionic-keyboard : ^2.1.3\n        \n            cordova-plugin-ionic-webview : ^3.1.2\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            cordova-sqlite-storage : 3.2.0\n        \n            core-js : ^2.5.4\n        \n            firebase : ^5.9.1\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCapstoneApp\nCapstone project\nFor my senior year of Computer Science. This is the creation of a Trivia App.\nI have choosen to use Angular, RxJS, Jasmine testing framework, Ionic 4 Framework (aka so also cordova).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LobbyPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Tab1PageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Tab2PageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        Tab3PageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_LobbyPageModule\n\n\n\ncluster_LobbyPageModule_declarations\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_QuizPageModule\n\n\n\ncluster_QuizPageModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_Tab1PageModule\n\n\n\ncluster_Tab1PageModule_declarations\n\n\n\ncluster_Tab2PageModule\n\n\n\ncluster_Tab2PageModule_declarations\n\n\n\ncluster_Tab3PageModule\n\n\n\ncluster_Tab3PageModule_declarations\n\n\n\ncluster_TabsPageModule\n\n\n\ncluster_TabsPageModule_declarations\n\n\n\ncluster_TabsPageModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLobbyPage\n\nLobbyPage\n\n\n\nLobbyPageModule\n\nLobbyPageModule\n\nLobbyPageModule -->\n\nLobbyPage->LobbyPageModule\n\n\n\n\n\nQuestionItemComponent\n\nQuestionItemComponent\n\nLobbyPageModule -->\n\nQuestionItemComponent->LobbyPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nQuestionItemComponent->SharedModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nQuestionComponent\n\nQuestionComponent\n\n\n\nQuizPageModule\n\nQuizPageModule\n\nQuizPageModule -->\n\nQuestionComponent->QuizPageModule\n\n\n\n\n\nQuizPage\n\nQuizPage\n\nQuizPageModule -->\n\nQuizPage->QuizPageModule\n\n\n\n\n\nQuestionItemComponent \n\nQuestionItemComponent \n\nQuestionItemComponent  -->\n\nSharedModule->QuestionItemComponent \n\n\n\n\n\nLobbyFormComponent\n\nLobbyFormComponent\n\n\n\nTab1PageModule\n\nTab1PageModule\n\nTab1PageModule -->\n\nLobbyFormComponent->Tab1PageModule\n\n\n\n\n\nTab1Page\n\nTab1Page\n\nTab1PageModule -->\n\nTab1Page->Tab1PageModule\n\n\n\n\n\nQuestionFormComponent\n\nQuestionFormComponent\n\n\n\nTab2PageModule\n\nTab2PageModule\n\nTab2PageModule -->\n\nQuestionFormComponent->Tab2PageModule\n\n\n\n\n\nTab2Page\n\nTab2Page\n\nTab2PageModule -->\n\nTab2Page->Tab2PageModule\n\n\n\n\n\nTab3Page\n\nTab3Page\n\n\n\nTab3PageModule\n\nTab3PageModule\n\nTab3PageModule -->\n\nTab3Page->Tab3PageModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\n\n\nTabsPageModule\n\nTabsPageModule\n\nTabsPageModule -->\n\nTabsPage->TabsPageModule\n\n\n\n\n\nTabsPageRoutingModule\n\nTabsPageRoutingModule\n\nTabsPageModule -->\n\nTabsPageRoutingModule->TabsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        31 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
